{"version":3,"file":"static/js/1904.c861bbf0.chunk.js","mappings":"qIACO,SAASA,EAAQC,GACtB,IAAI,KACFC,EAAO,SAAQ,OACfC,EAAM,MACNC,GACEH,EACJ,OAAOI,EAAAA,GAAWC,UAAU,MAC1BC,WAAAA,CAAYC,IACVC,KAAKC,SAAM,EACXD,KAAKD,UAAO,EACZC,KAAKD,KAAOA,EAEVC,KAAKC,IADM,QAATR,EACSM,EAAKE,IACE,YAATR,EACEM,EAAKG,WAELH,EAAKI,UAIdH,KAAKC,KAAON,IACHS,OAAOC,KAAKV,GAClBW,QAAQC,IACXP,KAAKC,IAAIM,GAAOZ,EAAMY,KAG1BH,OAAOC,KAAKX,GAAU,CAAC,GAAGY,QAAQE,IAC5Bd,GAAUA,EAAOc,IAAYR,KAAKC,KACpCD,KAAKC,IAAIQ,iBAAiBD,EAASd,EAAOc,KAGhD,CACAE,OAAAA,GACEN,OAAOC,KAAKX,GAAU,CAAC,GAAGY,QAAQE,IAC5Bd,GAAUA,EAAOc,IAAYR,KAAKC,KACpCD,KAAKC,IAAIU,oBAAoBH,EAASd,EAAOc,KAGnD,GAEJ,CAcO,SAASI,EAAOpB,GACrB,OAAOD,EAAQ,CACbE,KAAM,SACNC,OAAQF,GAEZ,CAMO,SAASqB,EAAQrB,GACtB,OAAOD,EAAQ,CACbE,KAAM,UACNC,OAAQF,GAEZ,C,6GC/DO,SAASsB,IACd,MAAMC,EAAYrB,EAAAA,GAAe,CAC/BsB,MAAQC,IACNA,EAAMC,oBAGV,OACEC,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAAAC,UACPF,EAAAA,EAAAA,KAACG,EAAAA,GAAU,CACTC,MAAK,uBACLC,MAAM,OACNC,OAAO,mBACPC,MAAM,OACNC,MAAO,CAAEC,OAAQ,aAAcC,KAAM,GACrCC,WAAY,CAACC,EAAAA,GAAMC,WAAYjB,MAIvC,C","sources":["../../extensions/events/esm/index.js","pages/examples/Example650.tsx"],"sourcesContent":["import { ViewPlugin } from '@codemirror/view';\nexport function element(opts) {\n  var {\n    type = 'scroll',\n    events,\n    props\n  } = opts;\n  return ViewPlugin.fromClass(class {\n    constructor(view) {\n      this.dom = void 0;\n      this.view = void 0;\n      this.view = view;\n      if (type === 'dom') {\n        this.dom = view.dom;\n      } else if (type === 'content') {\n        this.dom = view.contentDOM;\n      } else {\n        this.dom = view.scrollDOM;\n      }\n\n      // Apply props to the DOM element\n      if (this.dom && props) {\n        var keys = Object.keys(props);\n        keys.forEach(key => {\n          this.dom[key] = props[key];\n        });\n      }\n      Object.keys(events || {}).forEach(keyname => {\n        if (events && events[keyname] && this.dom) {\n          this.dom.addEventListener(keyname, events[keyname]);\n        }\n      });\n    }\n    destroy() {\n      Object.keys(events || {}).forEach(keyname => {\n        if (events && events[keyname] && this.dom) {\n          this.dom.removeEventListener(keyname, events[keyname]);\n        }\n      });\n    }\n  });\n}\n/**\n * The DOM element that can be styled to scroll.\n * (Note that it may not have been, so you can't assume this is scrollable.)\n */\nexport function dom(opts) {\n  return element({\n    type: 'dom',\n    events: opts\n  });\n}\n/**\n * The DOM element that wraps the entire editor view.\n */\nexport function scroll(opts) {\n  return element({\n    type: 'scroll',\n    events: opts\n  });\n}\n/**\n * The editable DOM element holding the editor content.\n * You should not, usually, interact with this content directly though the DOM,\n * since the editor will immediately undo most of the changes you make.\n */\nexport function content(opts) {\n  return element({\n    type: 'content',\n    events: opts\n  });\n}","import CodeMirror from '@uiw/react-codemirror';\nimport { langs } from '@uiw/codemirror-extensions-langs';\nimport * as events from '@uiw/codemirror-extensions-events';\nimport { Fragment } from 'react';\n\n/**\n * https://github.com/uiwjs/react-codemirror/issues/650\n */\nexport function Component() {\n  const extension = events.content({\n    paste: (event) => {\n      event.preventDefault();\n    },\n  });\n  return (\n    <Fragment>\n      <CodeMirror\n        value={`console.log('hello')`}\n        theme=\"none\"\n        height=\"400px !important\"\n        width=\"100%\"\n        style={{ margin: '0 0 23px 0', flex: 1 }}\n        extensions={[langs.markdown(), extension]}\n      />\n    </Fragment>\n  );\n}\n"],"names":["element","opts","type","events","props","ViewPlugin","fromClass","constructor","view","this","dom","contentDOM","scrollDOM","Object","keys","forEach","key","keyname","addEventListener","destroy","removeEventListener","scroll","content","Component","extension","paste","event","preventDefault","_jsx","Fragment","children","CodeMirror","value","theme","height","width","style","margin","flex","extensions","langs","markdown"],"sourceRoot":""}