"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[7833],{37833:(n,t,e)=>{e.r(t),e.d(t,{default:()=>s});const s='// Run this cell using Ctrl+Enter (\u2318+Enter on Mac)\n// Then run the next cell to see the output\n\nopen Microsoft.Quantum.Diagnostics;\n\noperation QubitsDemo () : Unit {\n    // This line allocates a qubit in state |0\u27e9\n    use q = Qubit();\n    Message("State |0\u27e9:");\n\n    // This line prints out the state of the quantum computer\n    // Since only one qubit is allocated, only its state is printed\n    DumpMachine();\n\n    // This line changes the qubit from state |0\u27e9 to state |1\u27e9\n    X(q);\n\n    Message("State |1\u27e9:");\n    DumpMachine();\n\n    // This line changes the qubit to state |-\u27e9 = (1/sqrt(2))(|0\u27e9 - |1\u27e9)\n    // That is, this puts the qubit into a superposition\n    // 1/sqrt(2) is approximately 0.707107\n    H(q);\n\n    Message("State |-\u27e9:");\n    DumpMachine();\n\n    // This line changes the qubit to state |-i\u27e9 = (1/sqrt(2))(|0\u27e9 - i|1\u27e9)\n    S(q);\n\n    Message("State |-i\u27e9:");\n    DumpMachine();\n\n    // This will put the qubit into an uneven superposition,\n    // where the amplitudes of |0\u27e9 and |1\u27e9 have different moduli\n    Rx(2.0, q);\n    Ry(1.0, q);\n\n    Message("Uneven superposition state:");\n    DumpMachine();\n\n    // This line returns the qubit to state |0\u27e9\n    Reset(q);\n}\n'}}]);
//# sourceMappingURL=7833.654f1f43.chunk.js.map