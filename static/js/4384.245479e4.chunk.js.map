{"version":3,"file":"static/js/4384.245479e4.chunk.js","mappings":"0KACO,SAASA,EAASC,GAIvB,YAHa,IAATA,IACFA,EAAO,KAEFC,EAAAA,EAAAA,IAAe,CACpBC,SAAU,CAACC,IACT,IAAIC,EAAOD,EAAQE,YAAY,WAC/B,OAAKD,EACDA,GAAQA,EAAKE,MAAQF,EAAKG,KAAOJ,EAAQK,SACpC,KAEF,CACLF,KAAc,MAARF,OAAe,EAASA,EAAKE,KACnCG,QAAS,IAAIT,IANG,QAUxB,CAC2BD,IAApB,I,kECXP,MAAMW,EAAQ,CACZ,CACEC,MAAO,iBAET,CACEA,MAAO,uBAET,CACEA,MAAO,uBAET,CACEA,MAAO,uBAET,CACEA,MAAO,qDAET,CACEA,MAAO,mCAET,CACEA,MAAO,uBAET,CACEA,MAAO,kBAET,CACEA,MAAO,wBAET,CACEA,MAAO,iBAET,CACEA,MAAO,kBAET,CACEA,MAAO,iBAET,CACEA,MAAO,qBAET,CACEA,MAAO,yCAIEC,EAAyCA,KACpD,MAAM,MAAEC,IAAUC,EAAAA,EAAAA,KACZC,GAASC,EAAAA,EAAAA,YAAWC,EAAAA,IAE1B,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAW,CAAAC,UACVF,EAAAA,EAAAA,KAACG,EAAAA,GAAU,CACTC,MAAOP,EAAOQ,MACdV,MAAOA,EACPW,OAAO,mBACPC,MAAO,CAAEC,OAAQ,cACjBC,WAAY,CAACC,EAAAA,GAAMC,WAAY9B,EAASW,SAMnCoB,EAAYA,KAErBZ,EAAAA,EAAAA,KAACa,EAAAA,GAAO,CAACC,KAAMA,IAAM,+BAAwDZ,UAC3EF,EAAAA,EAAAA,KAACN,EAAe,K,kECvEf,MAAMO,EAAcc,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4EAMdH,EAAAA,GAAOC,IAAGG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,uC,kDCL1B,SAAStB,IAAyD,IAAhDwB,EAAmCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,QAC7D,MAAMG,EAAOC,SAASC,gBAAgBC,aAAa,oBAC5ChC,EAAOiC,IAAYC,EAAAA,EAAAA,UAAiD,SAATL,EAAkB,OAASJ,GAO7F,OANAU,EAAAA,EAAAA,WAAU,KACRF,EAAsE,SAA7DH,SAASC,gBAAgBC,aAAa,mBAAgC,OAAS,SACxFF,SAASM,iBAAiB,oBAAsBC,IAC9CJ,EAASI,EAAEC,OAAOC,gBAEnB,IACI,CAAEvC,QAAOiC,WAClB,C","sources":["../../extensions/mentions/esm/index.js","pages/extensions/mentions/index.tsx","pages/extensions/index.tsx","utils/useTheme.tsx"],"sourcesContent":["import { autocompletion } from '@codemirror/autocomplete';\nexport function mentions(data) {\n  if (data === void 0) {\n    data = [];\n  }\n  return autocompletion({\n    override: [context => {\n      var word = context.matchBefore(/@(\\w+)?/);\n      if (!word) return null;\n      if (word && word.from == word.to && !context.explicit) {\n        return null;\n      }\n      return {\n        from: word == null ? void 0 : word.from,\n        options: [...data]\n      };\n    }]\n  });\n}\nexport var mentionsView = [mentions()];","import { useContext, type FC, type PropsWithChildren } from 'react';\nimport { mentions } from '@uiw/codemirror-extensions-mentions';\nimport CodeMirror from '@uiw/react-codemirror';\nimport { langs } from '@uiw/codemirror-extensions-langs';\nimport { useTheme } from '../../../utils/useTheme';\nimport { Preview, MdContext } from '../../theme/Preview';\nimport { PageWarpper } from '..';\n\nconst users = [\n  {\n    label: '@Walter White',\n  },\n  {\n    label: '@皮皮鲁',\n  },\n  {\n    label: '@鲁西西',\n  },\n  {\n    label: '@中本聪',\n  },\n  {\n    label: '@サトシ・ナカモト',\n  },\n  {\n    label: '@野比のび太',\n  },\n  {\n    label: '@성덕선',\n  },\n  {\n    label: '@Jesse Pinkman',\n  },\n  {\n    label: '@Gustavo \"Gus\" Fring',\n  },\n  {\n    label: '@Saul Goodman',\n  },\n  {\n    label: '@Hank Schrader',\n  },\n  {\n    label: '@Skyler White',\n  },\n  {\n    label: '@Mike Ehrmantraut',\n  },\n  {\n    label: '@Lydìã Rôdarté-Qüayle',\n  },\n];\n\nexport const MentionsExample: FC<PropsWithChildren> = () => {\n  const { theme } = useTheme();\n  const mdData = useContext(MdContext);\n\n  return (\n    <PageWarpper>\n      <CodeMirror\n        value={mdData.mdstr}\n        theme={theme}\n        height=\"300px !important\"\n        style={{ margin: '0 0 23px 0' }}\n        extensions={[langs.markdown(), mentions(users)]}\n      />\n    </PageWarpper>\n  );\n};\n\nexport const Component = () => {\n  return (\n    <Preview path={() => import('@uiw/codemirror-extensions-mentions/README.md')}>\n      <MentionsExample />\n    </Preview>\n  );\n};\n","import styled from 'styled-components';\n\nexport const PageWarpper = styled.div`\n  flex: 1;\n  max-width: 980px;\n  padding: 20px 20px 30px 20px;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nexport const Extensions = () => {};\n","import { useEffect, useState } from 'react';\nimport { ReactCodeMirrorProps } from '@uiw/react-codemirror';\n\nexport function useTheme(name: ReactCodeMirrorProps['theme'] = 'light') {\n  const dark = document.documentElement.getAttribute('data-color-mode');\n  const [theme, setTheme] = useState<ReactCodeMirrorProps['theme']>(dark === 'dark' ? 'dark' : name);\n  useEffect(() => {\n    setTheme(document.documentElement.getAttribute('data-color-mode') === 'dark' ? 'dark' : 'light');\n    document.addEventListener('colorschemechange', (e) => {\n      setTheme(e.detail.colorScheme as ReactCodeMirrorProps['theme']);\n    });\n  }, []);\n  return { theme, setTheme };\n}\n"],"names":["mentions","data","autocompletion","override","context","word","matchBefore","from","to","explicit","options","users","label","MentionsExample","theme","useTheme","mdData","useContext","MdContext","_jsx","PageWarpper","children","CodeMirror","value","mdstr","height","style","margin","extensions","langs","markdown","Component","Preview","path","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","name","arguments","length","undefined","dark","document","documentElement","getAttribute","setTheme","useState","useEffect","addEventListener","e","detail","colorScheme"],"sourceRoot":""}