{"version":3,"file":"static/js/4147.ab23c510.chunk.js","mappings":"wHAAA,qgD","sources":["../../node_modules/code-example/txt/sample.aes.txt"],"sourcesContent":["export default \"// Contract simulating developers organization\\ncontract HackBG =\\n\\n    record state = { developers: map(address, developer) }\\n\\n    record developer = { name: string\\n                       , age: int\\n                       , skillset: map(skill, experience) }\\n\\n    type skill = string\\n    type experience = int\\n\\n    datatype event =\\n          LogDeveloperAdded(indexed address, indexed int, string)\\n\\n    entrypoint init() : state = { developers = {} }\\n\\n    stateful entrypoint dev_add(account: address, dev_name: string, dev_age: int) =\\n        require(!is_member(account), \\\"ERROR_DEVELOPER_ALREADY_EXISTS\\\")\\n        let dev : developer = { name = dev_name\\n                              , age = dev_age\\n                              , skillset = {} }\\n        put(state{ developers[account] = dev })\\n        Chain.event(LogDeveloperAdded(account, Chain.timestamp, dev_name))\\n\\n    stateful entrypoint dev_update(account: address, dev_name: string, dev_age: int) =\\n        require(is_member(account), \\\"ERROR_DEVELOPER_DOES_NOT_EXIST\\\")\\n        put(state{ developers[account].name = dev_name })\\n        put(state{ developers[account].age = dev_age })\\n\\n    function is_member(account: address) : bool =\\n        Map.member(account, state.developers)\\n\\n    stateful entrypoint dev_skill_modify(account: address, skill: string, experience: int) =\\n        put(state{ developers[account].skillset[skill] = experience })\\n\\n    entrypoint dev_get(account: address) : developer =\\n        state.developers[account]\";"],"names":[],"sourceRoot":""}