{"version":3,"file":"static/js/8589.27fcbc46.chunk.js","mappings":"yHAAA,mvC","sources":["../../node_modules/code-example/txt/sample.powershell.txt"],"sourcesContent":["export default \"$SelectedObjectNames=@();\\n$XenCenterNodeSelected = 0;\\n#the object info array contains hashmaps, each of which represent a parameter set and describe a target in the XenCenter resource list\\nforeach($parameterSet in $ObjInfoArray)\\n{\\n  if ($parameterSet[\\\"class\\\"] -eq \\\"blank\\\")\\n  {\\n    #When the XenCenter node is selected a parameter set is created for each of your connected servers with the class and objUuid keys marked as blank\\n    if ($XenCenterNodeSelected)\\n    {\\n      continue\\n    }\\n    $XenCenterNodeSelected = 1;\\n    $SelectedObjectNames += \\\"XenCenter\\\"\\n  }\\n  elseif ($parameterSet[\\\"sessionRef\\\"] -eq \\\"null\\\")\\n  {\\n    #When a disconnected server is selected there is no session information, we get null for everything except class\\n  }\\n    $SelectedObjectNames += \\\"a disconnected server\\\"\\n  else\\n  {\\n    Connect-XenServer -url $parameterSet[\\\"url\\\"] -opaqueref $parameterSet[\\\"sessionRef\\\"]\\n    #Use $class to determine which server objects to get\\n    #-properties allows us to filter the results to just include the selected object\\n    $exp = \\\"Get-XenServer:{0} -properties @{{uuid='{1}'}}\\\" -f $parameterSet[\\\"class\\\"], $parameterSet[\\\"objUuid\\\"]\\n    $obj = Invoke-Expression $exp\\n    $SelectedObjectNames += $obj.name_label;\\n  } \\n}\";"],"names":[],"sourceRoot":""}