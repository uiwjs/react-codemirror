"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[7107],{7107:(e,n,t)=>{t.r(n),t.d(n,{default:()=>i});const i='//\n//  Copyright (c) Microsoft Corporation. All rights reserved.\n//\n\n#import "UseQuotes.h"\n#import <Use/GTLT.h> \n\n/*\n  Multi \n  Line\n  Comments \n*/\n@implementation Test\n\n- (void) applicationWillFinishLaunching:(NSNotification *)notification\n{\n}\n\n- (IBAction)onSelectInput:(id)sender\n{\n    NSString* defaultDir = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, true)[0];\n    \n    NSOpenPanel* panel = [NSOpenPanel openPanel];\n    [panel setAllowedFileTypes:[[NSArray alloc] initWithObjects:@"ipa", @"xcarchive", @"app", nil]];\n    \n    [panel beginWithCompletionHandler:^(NSInteger result)\n     {\n         if (result == NSFileHandlingPanelOKButton)\n             [self.inputTextField setStringValue:[panel.URL path]];\n     }];\n     return YES;\n\n     int hex = 0xFEF1F0F;\n   float ing = 3.14;\n   ing = 3.14e0;\n   ing = 31.4e-2;\n}\n\n-(id) initWithParams:(id<anObject>) aHandler withDeviceStateManager:(id<anotherObject>) deviceStateManager\n{\n    // add a tap gesture recognizer\n    UITapGestureRecognizer *tapGesture = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(handleTap:)];\n    NSMutableArray *gestureRecognizers = [NSMutableArray array];\n    [gestureRecognizers addObject:tapGesture];\n    [gestureRecognizers addObjectsFromArray:scnView.gestureRecognizers];\n    scnView.gestureRecognizers = gestureRecognizers;\n\n  return tapGesture;\n  return nil;\n}\n\n@end\n'}}]);
//# sourceMappingURL=7107.03d4ce59.chunk.js.map