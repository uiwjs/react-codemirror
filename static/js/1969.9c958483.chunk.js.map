{"version":3,"file":"static/js/1969.9c958483.chunk.js","mappings":"wHAAA,6qC","sources":["../../node_modules/code-example/txt/sample.livescript.txt"],"sourcesContent":["export default \"LiveScript\\n# Easy listing of implicit objects\\ntable1 =\\n  * id: 1\\n    name: 'george'\\n  * id: 2\\n    name: 'mike'\\n  * id: 3\\n    name: 'donald'\\n\\ntable2 =\\n  * id: 2\\n    age: 21\\n  * id: 1\\n    age: 20\\n  * id: 3\\n    age: 26\\n\\n# Implicit access, accessignment\\nup-case-name = (.name .= to-upper-case!)\\n\\n# List comprehensions, destructuring, piping\\n[{id:id1, name, age} for {id:id1, name} in table1\\n                     for {id:id2, age} in table2\\n                     when id1 is id2]\\n|> sort-by (.id) # using 'sort-by' from prelude.ls\\n|> each up-case-name # using 'each' from prelude.ls\\n|> JSON.stringify\\n#=>\\n#[{\\\"id\\\":1,\\\"name\\\":\\\"GEORGE\\\",\\\"age\\\":20},\\n# {\\\"id\\\":2,\\\"name\\\":\\\"MIKE\\\",  \\\"age\\\":21},\\n# {\\\"id\\\":3,\\\"name\\\":\\\"DONALD\\\",\\\"age\\\":26}]\\n\\n# operators as functions, piping\\nmap (.age), table2 |> fold1 (+)\\n#=> 67 ('fold1' and 'map' from prelude.ls)\\n\\nr = +...[4 5 6]          #=> [+4, +5, +6]\\nt = typeof! ...[\\\\b 5 {}] #=> [\\\"String\\\", \\\"Number\\\", \\\"Object\\\"]\\nc = ~...[4, 5]           #=> [-5, -6]\\n++...player<[strength hp]>\\n# also works with -, --, typeof, ! and delete!\\ni = new ...[some, classes]\\nc = ^^...[copy, these, {}]\\ndelete ...list[1, 2, 3]\\ndo ...[a, b, c]\";"],"names":[],"sourceRoot":""}