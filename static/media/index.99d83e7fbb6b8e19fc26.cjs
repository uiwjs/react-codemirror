"use strict";var state=require("@codemirror/state"),view=require("@codemirror/view"),language=require("@codemirror/language"),common=require("@lezer/common");const toggleComment=e=>{let{state:t}=e,r=t.doc.lineAt(t.selection.main.from),n=getConfig(e.state,r.from);return n.line?toggleLineComment(e):!!n.block&&toggleBlockCommentByLine(e)};function command(e,t){return({state:r,dispatch:n})=>{if(r.readOnly)return!1;let o=e(t,r);return!!o&&(n(r.update(o)),!0)}}const toggleLineComment=command(changeLineComment,0),lineComment=command(changeLineComment,1),lineUncomment=command(changeLineComment,2),toggleBlockComment=command(changeBlockComment,0),blockComment=command(changeBlockComment,1),blockUncomment=command(changeBlockComment,2),toggleBlockCommentByLine=command((e,t)=>changeBlockComment(e,t,selectedLineRanges(t)),0);function getConfig(e,t){let r=e.languageDataAt("commentTokens",t,1);return r.length?r[0]:{}}const SearchMargin=50;function findBlockComment(e,{open:t,close:r},n,o){let a,s,l=e.sliceDoc(n-50,n),i=e.sliceDoc(o,o+50),c=/\s*$/.exec(l)[0].length,d=/^\s*/.exec(i)[0].length,u=l.length-c;if(l.slice(u-t.length,u)==t&&i.slice(d,d+r.length)==r)return{open:{pos:n-c,margin:c&&1},close:{pos:o+d,margin:d&&1}};o-n<=100?a=s=e.sliceDoc(n,o):(a=e.sliceDoc(n,n+50),s=e.sliceDoc(o-50,o));let h=/^\s*/.exec(a)[0].length,m=/\s*$/.exec(s)[0].length,p=s.length-m-r.length;return a.slice(h,h+t.length)==t&&s.slice(p,p+r.length)==r?{open:{pos:n+h+t.length,margin:/\s/.test(a.charAt(h+t.length))?1:0},close:{pos:o-m-r.length,margin:/\s/.test(s.charAt(p-1))?1:0}}:null}function selectedLineRanges(e){let t=[];for(let r of e.selection.ranges){let n=e.doc.lineAt(r.from),o=r.to<=n.to?n:e.doc.lineAt(r.to);o.from>n.from&&o.from==r.to&&(o=r.to==n.to+1?n:e.doc.lineAt(r.to-1));let a=t.length-1;a>=0&&t[a].to>n.from?t[a].to=o.to:t.push({from:n.from+/^\s*/.exec(n.text)[0].length,to:o.to})}return t}function changeBlockComment(e,t,r=t.selection.ranges){let n=r.map(e=>getConfig(t,e.from).block);if(!n.every(e=>e))return null;let o=r.map((e,r)=>findBlockComment(t,n[r],e.from,e.to));if(2!=e&&!o.every(e=>e))return{changes:t.changes(r.map((e,t)=>o[t]?[]:[{from:e.from,insert:n[t].open+" "},{from:e.to,insert:" "+n[t].close}]))};if(1!=e&&o.some(e=>e)){let e=[];for(let t,r=0;r<o.length;r++)if(t=o[r]){let o=n[r],{open:a,close:s}=t;e.push({from:a.pos-o.open.length,to:a.pos+a.margin},{from:s.pos-s.margin,to:s.pos+o.close.length})}return{changes:e}}return null}function changeLineComment(e,t,r=t.selection.ranges){let n=[],o=-1;for(let{from:a,to:s}of r){let e=n.length,r=1e9,l=getConfig(t,a).line;if(l){for(let e=a;e<=s;){let i=t.doc.lineAt(e);if(i.from>o&&(a==s||s>i.from)){o=i.from;let e=/^\s*/.exec(i.text)[0].length,t=e==i.length,a=i.text.slice(e,e+l.length)==l?e:-1;e<i.text.length&&e<r&&(r=e),n.push({line:i,comment:a,token:l,indent:e,empty:t,single:!1})}e=i.to+1}if(r<1e9)for(let t=e;t<n.length;t++)n[t].indent<n[t].line.text.length&&(n[t].indent=r);n.length==e+1&&(n[e].single=!0)}}if(2!=e&&n.some(e=>e.comment<0&&(!e.empty||e.single))){let e=[];for(let{line:t,token:o,indent:a,empty:s,single:l}of n)!l&&s||e.push({from:t.from+a,insert:o+" "});let r=t.changes(e);return{changes:r,selection:t.selection.map(r,1)}}if(1!=e&&n.some(e=>e.comment>=0)){let e=[];for(let{line:t,comment:r,token:o}of n)if(r>=0){let n=t.from+r,a=n+o.length;" "==t.text[a-t.from]&&a++,e.push({from:n,to:a})}return{changes:e}}return null}const fromHistory=state.Annotation.define(),isolateHistory=state.Annotation.define(),invertedEffects=state.Facet.define(),historyConfig=state.Facet.define({combine:e=>state.combineConfig(e,{minDepth:100,newGroupDelay:500,joinToEvent:(e,t)=>t},{minDepth:Math.max,newGroupDelay:Math.min,joinToEvent:(e,t)=>(r,n)=>e(r,n)||t(r,n)})}),historyField_=state.StateField.define({create:()=>HistoryState.empty,update(e,t){let r=t.state.facet(historyConfig),n=t.annotation(fromHistory);if(n){let o=HistEvent.fromTransaction(t,n.selection),a=n.side,s=0==a?e.undone:e.done;return s=o?updateBranch(s,s.length,r.minDepth,o):addSelection(s,t.startState.selection),new HistoryState(0==a?n.rest:s,0==a?s:n.rest)}let o=t.annotation(isolateHistory);if("full"!=o&&"before"!=o||(e=e.isolate()),!1===t.annotation(state.Transaction.addToHistory))return t.changes.empty?e:e.addMapping(t.changes.desc);let a=HistEvent.fromTransaction(t),s=t.annotation(state.Transaction.time),l=t.annotation(state.Transaction.userEvent);return a?e=e.addChanges(a,s,l,r,t):t.selection&&(e=e.addSelection(t.startState.selection,s,l,r.newGroupDelay)),"full"!=o&&"after"!=o||(e=e.isolate()),e},toJSON:e=>({done:e.done.map(e=>e.toJSON()),undone:e.undone.map(e=>e.toJSON())}),fromJSON:e=>new HistoryState(e.done.map(HistEvent.fromJSON),e.undone.map(HistEvent.fromJSON))});function history(e={}){return[historyField_,historyConfig.of(e),view.EditorView.domEventHandlers({beforeinput(e,t){let r="historyUndo"==e.inputType?undo:"historyRedo"==e.inputType?redo:null;return!!r&&(e.preventDefault(),r(t))}})]}const historyField=historyField_;function cmd(e,t){return function({state:r,dispatch:n}){if(!t&&r.readOnly)return!1;let o=r.field(historyField_,!1);if(!o)return!1;let a=o.pop(e,r,t);return!!a&&(n(a),!0)}}const undo=cmd(0,!1),redo=cmd(1,!1),undoSelection=cmd(0,!0),redoSelection=cmd(1,!0);function depth(e){return function(t){let r=t.field(historyField_,!1);if(!r)return 0;let n=0==e?r.done:r.undone;return n.length-(n.length&&!n[0].changes?1:0)}}const undoDepth=depth(0),redoDepth=depth(1);class HistEvent{constructor(e,t,r,n,o){this.changes=e,this.effects=t,this.mapped=r,this.startSelection=n,this.selectionsAfter=o}setSelAfter(e){return new HistEvent(this.changes,this.effects,this.mapped,this.startSelection,e)}toJSON(){var e,t,r;return{changes:null===(e=this.changes)||void 0===e?void 0:e.toJSON(),mapped:null===(t=this.mapped)||void 0===t?void 0:t.toJSON(),startSelection:null===(r=this.startSelection)||void 0===r?void 0:r.toJSON(),selectionsAfter:this.selectionsAfter.map(e=>e.toJSON())}}static fromJSON(e){return new HistEvent(e.changes&&state.ChangeSet.fromJSON(e.changes),[],e.mapped&&state.ChangeDesc.fromJSON(e.mapped),e.startSelection&&state.EditorSelection.fromJSON(e.startSelection),e.selectionsAfter.map(state.EditorSelection.fromJSON))}static fromTransaction(e,t){let r=none;for(let n of e.startState.facet(invertedEffects)){let t=n(e);t.length&&(r=r.concat(t))}return!r.length&&e.changes.empty?null:new HistEvent(e.changes.invert(e.startState.doc),r,void 0,t||e.startState.selection,none)}static selection(e){return new HistEvent(void 0,none,void 0,void 0,e)}}function updateBranch(e,t,r,n){let o=t+1>r+20?t-r-1:0,a=e.slice(o,t);return a.push(n),a}function isAdjacent(e,t){let r=[],n=!1;return e.iterChangedRanges((e,t)=>r.push(e,t)),t.iterChangedRanges((e,t,o,a)=>{for(let s=0;s<r.length;){let e=r[s++],t=r[s++];a>=e&&o<=t&&(n=!0)}}),n}function eqSelectionShape(e,t){return e.ranges.length==t.ranges.length&&0===e.ranges.filter((e,r)=>e.empty!=t.ranges[r].empty).length}function conc(e,t){return e.length?t.length?e.concat(t):e:t}const none=[],MaxSelectionsPerEvent=200;function addSelection(e,t){if(e.length){let r=e[e.length-1],n=r.selectionsAfter.slice(Math.max(0,r.selectionsAfter.length-MaxSelectionsPerEvent));return n.length&&n[n.length-1].eq(t)?e:(n.push(t),updateBranch(e,e.length-1,1e9,r.setSelAfter(n)))}return[HistEvent.selection([t])]}function popSelection(e){let t=e[e.length-1],r=e.slice();return r[e.length-1]=t.setSelAfter(t.selectionsAfter.slice(0,t.selectionsAfter.length-1)),r}function addMappingToBranch(e,t){if(!e.length)return e;let r=e.length,n=none;for(;r;){let o=mapEvent(e[r-1],t,n);if(o.changes&&!o.changes.empty||o.effects.length){let t=e.slice(0,r);return t[r-1]=o,t}t=o.mapped,r--,n=o.selectionsAfter}return n.length?[HistEvent.selection(n)]:none}function mapEvent(e,t,r){let n=conc(e.selectionsAfter.length?e.selectionsAfter.map(e=>e.map(t)):none,r);if(!e.changes)return HistEvent.selection(n);let o=e.changes.map(t),a=t.mapDesc(e.changes,!0),s=e.mapped?e.mapped.composeDesc(a):a;return new HistEvent(o,state.StateEffect.mapEffects(e.effects,t),s,e.startSelection.map(a),n)}const joinableUserEvent=/^(input\.type|delete)($|\.)/;class HistoryState{constructor(e,t,r=0,n=void 0){this.done=e,this.undone=t,this.prevTime=r,this.prevUserEvent=n}isolate(){return this.prevTime?new HistoryState(this.done,this.undone):this}addChanges(e,t,r,n,o){let a=this.done,s=a[a.length-1];return a=s&&s.changes&&!s.changes.empty&&e.changes&&(!r||joinableUserEvent.test(r))&&(!s.selectionsAfter.length&&t-this.prevTime<n.newGroupDelay&&n.joinToEvent(o,isAdjacent(s.changes,e.changes))||"input.type.compose"==r)?updateBranch(a,a.length-1,n.minDepth,new HistEvent(e.changes.compose(s.changes),conc(state.StateEffect.mapEffects(e.effects,s.changes),s.effects),s.mapped,s.startSelection,none)):updateBranch(a,a.length,n.minDepth,e),new HistoryState(a,none,t,r)}addSelection(e,t,r,n){let o=this.done.length?this.done[this.done.length-1].selectionsAfter:none;return o.length>0&&t-this.prevTime<n&&r==this.prevUserEvent&&r&&/^select($|\.)/.test(r)&&eqSelectionShape(o[o.length-1],e)?this:new HistoryState(addSelection(this.done,e),this.undone,t,r)}addMapping(e){return new HistoryState(addMappingToBranch(this.done,e),addMappingToBranch(this.undone,e),this.prevTime,this.prevUserEvent)}pop(e,t,r){let n=0==e?this.done:this.undone;if(0==n.length)return null;let o=n[n.length-1],a=o.selectionsAfter[0]||t.selection;if(r&&o.selectionsAfter.length)return t.update({selection:o.selectionsAfter[o.selectionsAfter.length-1],annotations:fromHistory.of({side:e,rest:popSelection(n),selection:a}),userEvent:0==e?"select.undo":"select.redo",scrollIntoView:!0});if(o.changes){let r=1==n.length?none:n.slice(0,n.length-1);return o.mapped&&(r=addMappingToBranch(r,o.mapped)),t.update({changes:o.changes,selection:o.startSelection,effects:o.effects,annotations:fromHistory.of({side:e,rest:r,selection:a}),filter:!1,userEvent:0==e?"undo":"redo",scrollIntoView:!0})}return null}}HistoryState.empty=new HistoryState(none,none);const historyKeymap=[{key:"Mod-z",run:undo,preventDefault:!0},{key:"Mod-y",mac:"Mod-Shift-z",run:redo,preventDefault:!0},{linux:"Ctrl-Shift-z",run:redo,preventDefault:!0},{key:"Mod-u",run:undoSelection,preventDefault:!0},{key:"Alt-u",mac:"Mod-Shift-u",run:redoSelection,preventDefault:!0}];function updateSel(e,t){return state.EditorSelection.create(e.ranges.map(t),e.mainIndex)}function setSel(e,t){return e.update({selection:t,scrollIntoView:!0,userEvent:"select"})}function moveSel({state:e,dispatch:t},r){let n=updateSel(e.selection,r);return!n.eq(e.selection,!0)&&(t(setSel(e,n)),!0)}function rangeEnd(e,t){return state.EditorSelection.cursor(t?e.to:e.from)}function cursorByChar(e,t){return moveSel(e,r=>r.empty?e.moveByChar(r,t):rangeEnd(r,t))}function ltrAtCursor(e){return e.textDirectionAt(e.state.selection.main.head)==view.Direction.LTR}const cursorCharLeft=e=>cursorByChar(e,!ltrAtCursor(e)),cursorCharRight=e=>cursorByChar(e,ltrAtCursor(e)),cursorCharForward=e=>cursorByChar(e,!0),cursorCharBackward=e=>cursorByChar(e,!1);function byCharLogical(e,t,r){let n=t.head,o=e.doc.lineAt(n);return n=n==(r?o.to:o.from)?r?Math.min(e.doc.length,o.to+1):Math.max(0,o.from-1):o.from+state.findClusterBreak(o.text,n-o.from,r),state.EditorSelection.cursor(n,r?-1:1)}function moveByCharLogical(e,t){return moveSel(e,r=>r.empty?byCharLogical(e.state,r,t):rangeEnd(r,t))}const cursorCharForwardLogical=e=>moveByCharLogical(e,!0),cursorCharBackwardLogical=e=>moveByCharLogical(e,!1);function cursorByGroup(e,t){return moveSel(e,r=>r.empty?e.moveByGroup(r,t):rangeEnd(r,t))}const cursorGroupLeft=e=>cursorByGroup(e,!ltrAtCursor(e)),cursorGroupRight=e=>cursorByGroup(e,ltrAtCursor(e)),cursorGroupForward=e=>cursorByGroup(e,!0),cursorGroupBackward=e=>cursorByGroup(e,!1);function toGroupStart(e,t,r){let n=e.state.charCategorizer(t),o=n(r),a=o!=state.CharCategory.Space;return e=>{let t=n(e);return t!=state.CharCategory.Space?a&&t==o:(a=!1,!0)}}const cursorGroupForwardWin=e=>moveSel(e,t=>t.empty?e.moveByChar(t,!0,r=>toGroupStart(e,t.head,r)):rangeEnd(t,!0)),segmenter="undefined"!=typeof Intl&&Intl.Segmenter?new Intl.Segmenter(void 0,{granularity:"word"}):null;function moveBySubword(e,t,r){let n=e.state.charCategorizer(t.from),o=state.CharCategory.Space,a=t.from,s=0,l=!1,i=!1,c=!1,d=t=>{if(l)return!1;a+=r?t.length:-t.length;let d,u=n(t);if(u==state.CharCategory.Word&&t.charCodeAt(0)<128&&/[\W_]/.test(t)&&(u=-1),o==state.CharCategory.Space&&(o=u),o!=u)return!1;if(o==state.CharCategory.Word)if(t.toLowerCase()==t){if(!r&&i)return!1;c=!0}else if(c){if(r)return!1;l=!0}else{if(i&&r&&n(d=e.state.sliceDoc(a,a+1))==state.CharCategory.Word&&d.toLowerCase()==d)return!1;i=!0}return s++,!0},u=e.moveByChar(t,r,e=>(d(e),d));if(segmenter&&o==state.CharCategory.Word&&u.from==t.from+s*(r?1:-1)){let n=Math.min(t.head,u.head),o=Math.max(t.head,u.head),a=e.state.sliceDoc(n,o);if(a.length>1&&/[\u4E00-\uffff]/.test(a)){let e=Array.from(segmenter.segment(a));if(e.length>1)return r?state.EditorSelection.cursor(t.head+e[1].index,-1):state.EditorSelection.cursor(u.head+e[e.length-1].index,1)}}return u}function cursorBySubword(e,t){return moveSel(e,r=>r.empty?moveBySubword(e,r,t):rangeEnd(r,t))}const cursorSubwordForward=e=>cursorBySubword(e,!0),cursorSubwordBackward=e=>cursorBySubword(e,!1);function interestingNode(e,t,r){if(t.type.prop(r))return!0;let n=t.to-t.from;return n&&(n>2||/[^\s,.;:]/.test(e.sliceDoc(t.from,t.to)))||t.firstChild}function moveBySyntax(e,t,r){let n,o,a=language.syntaxTree(e).resolveInner(t.head),s=r?common.NodeProp.closedBy:common.NodeProp.openedBy;for(let l=t.head;;){let t=r?a.childAfter(l):a.childBefore(l);if(!t)break;interestingNode(e,t,s)?a=t:l=r?t.to:t.from}return o=a.type.prop(s)&&(n=r?language.matchBrackets(e,a.from,1):language.matchBrackets(e,a.to,-1))&&n.matched?r?n.end.to:n.end.from:r?a.to:a.from,state.EditorSelection.cursor(o,r?-1:1)}const cursorSyntaxLeft=e=>moveSel(e,t=>moveBySyntax(e.state,t,!ltrAtCursor(e))),cursorSyntaxRight=e=>moveSel(e,t=>moveBySyntax(e.state,t,ltrAtCursor(e)));function cursorByLine(e,t){return moveSel(e,r=>{if(!r.empty)return rangeEnd(r,t);let n=e.moveVertically(r,t);return n.head!=r.head?n:e.moveToLineBoundary(r,t)})}const cursorLineUp=e=>cursorByLine(e,!1),cursorLineDown=e=>cursorByLine(e,!0);function pageInfo(e){let t,r=e.scrollDOM.clientHeight<e.scrollDOM.scrollHeight-2,n=0,o=0;if(r){for(let t of e.state.facet(view.EditorView.scrollMargins)){let r=t(e);(null===r||void 0===r?void 0:r.top)&&(n=Math.max(null===r||void 0===r?void 0:r.top,n)),(null===r||void 0===r?void 0:r.bottom)&&(o=Math.max(null===r||void 0===r?void 0:r.bottom,o))}t=e.scrollDOM.clientHeight-n-o}else t=(e.dom.ownerDocument.defaultView||window).innerHeight;return{marginTop:n,marginBottom:o,selfScroll:r,height:Math.max(e.defaultLineHeight,t-5)}}function cursorByPage(e,t){let r,n=pageInfo(e),{state:o}=e,a=updateSel(o.selection,r=>r.empty?e.moveVertically(r,t,n.height):rangeEnd(r,t));if(a.eq(o.selection))return!1;if(n.selfScroll){let t=e.coordsAtPos(o.selection.main.head),s=e.scrollDOM.getBoundingClientRect(),l=s.top+n.marginTop,i=s.bottom-n.marginBottom;t&&t.top>l&&t.bottom<i&&(r=view.EditorView.scrollIntoView(a.main.head,{y:"start",yMargin:t.top-l}))}return e.dispatch(setSel(o,a),{effects:r}),!0}const cursorPageUp=e=>cursorByPage(e,!1),cursorPageDown=e=>cursorByPage(e,!0);function moveByLineBoundary(e,t,r){let n=e.lineBlockAt(t.head),o=e.moveToLineBoundary(t,r);if(o.head==t.head&&o.head!=(r?n.to:n.from)&&(o=e.moveToLineBoundary(t,r,!1)),!r&&o.head==n.from&&n.length){let r=/^\s*/.exec(e.state.sliceDoc(n.from,Math.min(n.from+100,n.to)))[0].length;r&&t.head!=n.from+r&&(o=state.EditorSelection.cursor(n.from+r))}return o}const cursorLineBoundaryForward=e=>moveSel(e,t=>moveByLineBoundary(e,t,!0)),cursorLineBoundaryBackward=e=>moveSel(e,t=>moveByLineBoundary(e,t,!1)),cursorLineBoundaryLeft=e=>moveSel(e,t=>moveByLineBoundary(e,t,!ltrAtCursor(e))),cursorLineBoundaryRight=e=>moveSel(e,t=>moveByLineBoundary(e,t,ltrAtCursor(e))),cursorLineStart=e=>moveSel(e,t=>state.EditorSelection.cursor(e.lineBlockAt(t.head).from,1)),cursorLineEnd=e=>moveSel(e,t=>state.EditorSelection.cursor(e.lineBlockAt(t.head).to,-1));function toMatchingBracket(e,t,r){let n=!1,o=updateSel(e.selection,t=>{let o=language.matchBrackets(e,t.head,-1)||language.matchBrackets(e,t.head,1)||t.head>0&&language.matchBrackets(e,t.head-1,1)||t.head<e.doc.length&&language.matchBrackets(e,t.head+1,-1);if(!o||!o.end)return t;n=!0;let a=o.start.from==t.head?o.end.to:o.end.from;return r?state.EditorSelection.range(t.anchor,a):state.EditorSelection.cursor(a)});return!!n&&(t(setSel(e,o)),!0)}const cursorMatchingBracket=({state:e,dispatch:t})=>toMatchingBracket(e,t,!1),selectMatchingBracket=({state:e,dispatch:t})=>toMatchingBracket(e,t,!0);function extendSel(e,t){let r=updateSel(e.state.selection,e=>{let r=t(e);return state.EditorSelection.range(e.anchor,r.head,r.goalColumn,r.bidiLevel||void 0)});return!r.eq(e.state.selection)&&(e.dispatch(setSel(e.state,r)),!0)}function selectByChar(e,t){return extendSel(e,r=>e.moveByChar(r,t))}const selectCharLeft=e=>selectByChar(e,!ltrAtCursor(e)),selectCharRight=e=>selectByChar(e,ltrAtCursor(e)),selectCharForward=e=>selectByChar(e,!0),selectCharBackward=e=>selectByChar(e,!1),selectCharForwardLogical=e=>extendSel(e,t=>byCharLogical(e.state,t,!0)),selectCharBackwardLogical=e=>extendSel(e,t=>byCharLogical(e.state,t,!1));function selectByGroup(e,t){return extendSel(e,r=>e.moveByGroup(r,t))}const selectGroupLeft=e=>selectByGroup(e,!ltrAtCursor(e)),selectGroupRight=e=>selectByGroup(e,ltrAtCursor(e)),selectGroupForward=e=>selectByGroup(e,!0),selectGroupBackward=e=>selectByGroup(e,!1),selectGroupForwardWin=e=>extendSel(e,t=>e.moveByChar(t,!0,r=>toGroupStart(e,t.head,r)));function selectBySubword(e,t){return extendSel(e,r=>moveBySubword(e,r,t))}const selectSubwordForward=e=>selectBySubword(e,!0),selectSubwordBackward=e=>selectBySubword(e,!1),selectSyntaxLeft=e=>extendSel(e,t=>moveBySyntax(e.state,t,!ltrAtCursor(e))),selectSyntaxRight=e=>extendSel(e,t=>moveBySyntax(e.state,t,ltrAtCursor(e)));function selectByLine(e,t){return extendSel(e,r=>e.moveVertically(r,t))}const selectLineUp=e=>selectByLine(e,!1),selectLineDown=e=>selectByLine(e,!0);function selectByPage(e,t){return extendSel(e,r=>e.moveVertically(r,t,pageInfo(e).height))}const selectPageUp=e=>selectByPage(e,!1),selectPageDown=e=>selectByPage(e,!0),selectLineBoundaryForward=e=>extendSel(e,t=>moveByLineBoundary(e,t,!0)),selectLineBoundaryBackward=e=>extendSel(e,t=>moveByLineBoundary(e,t,!1)),selectLineBoundaryLeft=e=>extendSel(e,t=>moveByLineBoundary(e,t,!ltrAtCursor(e))),selectLineBoundaryRight=e=>extendSel(e,t=>moveByLineBoundary(e,t,ltrAtCursor(e))),selectLineStart=e=>extendSel(e,t=>state.EditorSelection.cursor(e.lineBlockAt(t.head).from)),selectLineEnd=e=>extendSel(e,t=>state.EditorSelection.cursor(e.lineBlockAt(t.head).to)),cursorDocStart=({state:e,dispatch:t})=>(t(setSel(e,{anchor:0})),!0),cursorDocEnd=({state:e,dispatch:t})=>(t(setSel(e,{anchor:e.doc.length})),!0),selectDocStart=({state:e,dispatch:t})=>(t(setSel(e,{anchor:e.selection.main.anchor,head:0})),!0),selectDocEnd=({state:e,dispatch:t})=>(t(setSel(e,{anchor:e.selection.main.anchor,head:e.doc.length})),!0),selectAll=({state:e,dispatch:t})=>(t(e.update({selection:{anchor:0,head:e.doc.length},userEvent:"select"})),!0),selectLine=({state:e,dispatch:t})=>{let r=selectedLineBlocks(e).map(({from:t,to:r})=>state.EditorSelection.range(t,Math.min(r+1,e.doc.length)));return t(e.update({selection:state.EditorSelection.create(r),userEvent:"select"})),!0},selectParentSyntax=({state:e,dispatch:t})=>{let r=updateSel(e.selection,t=>{let r=language.syntaxTree(e),n=r.resolveStack(t.from,1);if(t.empty){let e=r.resolveStack(t.from,-1);e.node.from>=n.node.from&&e.node.to<=n.node.to&&(n=e)}for(let e=n;e;e=e.next){let{node:r}=e;if((r.from<t.from&&r.to>=t.to||r.to>t.to&&r.from<=t.from)&&e.next)return state.EditorSelection.range(r.to,r.from)}return t});return!r.eq(e.selection)&&(t(setSel(e,r)),!0)},simplifySelection=({state:e,dispatch:t})=>{let r=e.selection,n=null;return r.ranges.length>1?n=state.EditorSelection.create([r.main]):r.main.empty||(n=state.EditorSelection.create([state.EditorSelection.cursor(r.main.head)])),!!n&&(t(setSel(e,n)),!0)};function deleteBy(e,t){if(e.state.readOnly)return!1;let r="delete.selection",{state:n}=e,o=n.changeByRange(n=>{let{from:o,to:a}=n;if(o==a){let s=t(n);s<o?(r="delete.backward",s=skipAtomic(e,s,!1)):s>o&&(r="delete.forward",s=skipAtomic(e,s,!0)),o=Math.min(o,s),a=Math.max(a,s)}else o=skipAtomic(e,o,!1),a=skipAtomic(e,a,!0);return o==a?{range:n}:{changes:{from:o,to:a},range:state.EditorSelection.cursor(o,o<n.head?-1:1)}});return!o.changes.empty&&(e.dispatch(n.update(o,{scrollIntoView:!0,userEvent:r,effects:"delete.selection"==r?view.EditorView.announce.of(n.phrase("Selection deleted")):void 0})),!0)}function skipAtomic(e,t,r){if(e instanceof view.EditorView)for(let n of e.state.facet(view.EditorView.atomicRanges).map(t=>t(e)))n.between(t,t,(e,n)=>{e<t&&n>t&&(t=r?n:e)});return t}const deleteByChar=(e,t,r)=>deleteBy(e,n=>{let o,a,s=n.from,{state:l}=e,i=l.doc.lineAt(s);if(r&&!t&&s>i.from&&s<i.from+200&&!/[^ \t]/.test(o=i.text.slice(0,s-i.from))){if("\t"==o[o.length-1])return s-1;let e=state.countColumn(o,l.tabSize)%language.getIndentUnit(l)||language.getIndentUnit(l);for(let t=0;t<e&&" "==o[o.length-1-t];t++)s--;a=s}else a=state.findClusterBreak(i.text,s-i.from,t,t)+i.from,a==s&&i.number!=(t?l.doc.lines:1)?a+=t?1:-1:!t&&/[\ufe00-\ufe0f]/.test(i.text.slice(a-i.from,s-i.from))&&(a=state.findClusterBreak(i.text,a-i.from,!1,!1)+i.from);return a}),deleteCharBackward=e=>deleteByChar(e,!1,!0),deleteCharBackwardStrict=e=>deleteByChar(e,!1,!1),deleteCharForward=e=>deleteByChar(e,!0,!1),deleteByGroup=(e,t)=>deleteBy(e,r=>{let n=r.head,{state:o}=e,a=o.doc.lineAt(n),s=o.charCategorizer(n);for(let e=null;;){if(n==(t?a.to:a.from)){n==r.head&&a.number!=(t?o.doc.lines:1)&&(n+=t?1:-1);break}let l=state.findClusterBreak(a.text,n-a.from,t)+a.from,i=a.text.slice(Math.min(n,l)-a.from,Math.max(n,l)-a.from),c=s(i);if(null!=e&&c!=e)break;" "==i&&n==r.head||(e=c),n=l}return n}),deleteGroupBackward=e=>deleteByGroup(e,!1),deleteGroupForward=e=>deleteByGroup(e,!0),deleteToLineEnd=e=>deleteBy(e,t=>{let r=e.lineBlockAt(t.head).to;return t.head<r?r:Math.min(e.state.doc.length,t.head+1)}),deleteToLineStart=e=>deleteBy(e,t=>{let r=e.lineBlockAt(t.head).from;return t.head>r?r:Math.max(0,t.head-1)}),deleteLineBoundaryBackward=e=>deleteBy(e,t=>{let r=e.moveToLineBoundary(t,!1).head;return t.head>r?r:Math.max(0,t.head-1)}),deleteLineBoundaryForward=e=>deleteBy(e,t=>{let r=e.moveToLineBoundary(t,!0).head;return t.head<r?r:Math.min(e.state.doc.length,t.head+1)}),deleteTrailingWhitespace=({state:e,dispatch:t})=>{if(e.readOnly)return!1;let r=[];for(let n=0,o="",a=e.doc.iter();;){if(a.next(),a.lineBreak||a.done){let e=o.search(/\s+$/);if(e>-1&&r.push({from:n-(o.length-e),to:n}),a.done)break;o=""}else o=a.value;n+=a.value.length}return!!r.length&&(t(e.update({changes:r,userEvent:"delete"})),!0)},splitLine=({state:e,dispatch:t})=>{if(e.readOnly)return!1;let r=e.changeByRange(e=>({changes:{from:e.from,to:e.to,insert:state.Text.of(["",""])},range:state.EditorSelection.cursor(e.from)}));return t(e.update(r,{scrollIntoView:!0,userEvent:"input"})),!0},transposeChars=({state:e,dispatch:t})=>{if(e.readOnly)return!1;let r=e.changeByRange(t=>{if(!t.empty||0==t.from||t.from==e.doc.length)return{range:t};let r=t.from,n=e.doc.lineAt(r),o=r==n.from?r-1:state.findClusterBreak(n.text,r-n.from,!1)+n.from,a=r==n.to?r+1:state.findClusterBreak(n.text,r-n.from,!0)+n.from;return{changes:{from:o,to:a,insert:e.doc.slice(r,a).append(e.doc.slice(o,r))},range:state.EditorSelection.cursor(a)}});return!r.changes.empty&&(t(e.update(r,{scrollIntoView:!0,userEvent:"move.character"})),!0)};function selectedLineBlocks(e){let t=[],r=-1;for(let n of e.selection.ranges){let o=e.doc.lineAt(n.from),a=e.doc.lineAt(n.to);if(n.empty||n.to!=a.from||(a=e.doc.lineAt(n.to-1)),r>=o.number){let e=t[t.length-1];e.to=a.to,e.ranges.push(n)}else t.push({from:o.from,to:a.to,ranges:[n]});r=a.number+1}return t}function moveLine(e,t,r){if(e.readOnly)return!1;let n=[],o=[];for(let a of selectedLineBlocks(e)){if(r?a.to==e.doc.length:0==a.from)continue;let t=e.doc.lineAt(r?a.to+1:a.from-1),s=t.length+1;if(r){n.push({from:a.to,to:t.to},{from:a.from,insert:t.text+e.lineBreak});for(let t of a.ranges)o.push(state.EditorSelection.range(Math.min(e.doc.length,t.anchor+s),Math.min(e.doc.length,t.head+s)))}else{n.push({from:t.from,to:a.from},{from:a.to,insert:e.lineBreak+t.text});for(let e of a.ranges)o.push(state.EditorSelection.range(e.anchor-s,e.head-s))}}return!!n.length&&(t(e.update({changes:n,scrollIntoView:!0,selection:state.EditorSelection.create(o,e.selection.mainIndex),userEvent:"move.line"})),!0)}const moveLineUp=({state:e,dispatch:t})=>moveLine(e,t,!1),moveLineDown=({state:e,dispatch:t})=>moveLine(e,t,!0);function copyLine(e,t,r){if(e.readOnly)return!1;let n=[];for(let o of selectedLineBlocks(e))r?n.push({from:o.from,insert:e.doc.slice(o.from,o.to)+e.lineBreak}):n.push({from:o.to,insert:e.lineBreak+e.doc.slice(o.from,o.to)});return t(e.update({changes:n,scrollIntoView:!0,userEvent:"input.copyline"})),!0}const copyLineUp=({state:e,dispatch:t})=>copyLine(e,t,!1),copyLineDown=({state:e,dispatch:t})=>copyLine(e,t,!0),deleteLine=e=>{if(e.state.readOnly)return!1;let{state:t}=e,r=t.changes(selectedLineBlocks(t).map(({from:e,to:r})=>(e>0?e--:r<t.doc.length&&r++,{from:e,to:r}))),n=updateSel(t.selection,t=>{let r;if(e.lineWrapping){let n=e.lineBlockAt(t.head),o=e.coordsAtPos(t.head,t.assoc||1);o&&(r=n.bottom+e.documentTop-o.bottom+e.defaultLineHeight/2)}return e.moveVertically(t,!0,r)}).map(r);return e.dispatch({changes:r,selection:n,scrollIntoView:!0,userEvent:"delete.line"}),!0},insertNewline=({state:e,dispatch:t})=>(t(e.update(e.replaceSelection(e.lineBreak),{scrollIntoView:!0,userEvent:"input"})),!0),insertNewlineKeepIndent=({state:e,dispatch:t})=>(t(e.update(e.changeByRange(t=>{let r=/^\s*/.exec(e.doc.lineAt(t.from).text)[0];return{changes:{from:t.from,to:t.to,insert:e.lineBreak+r},range:state.EditorSelection.cursor(t.from+r.length+1)}}),{scrollIntoView:!0,userEvent:"input"})),!0);function isBetweenBrackets(e,t){if(/\(\)|\[\]|\{\}/.test(e.sliceDoc(t-1,t+1)))return{from:t,to:t};let r,n=language.syntaxTree(e).resolveInner(t),o=n.childBefore(t),a=n.childAfter(t);return o&&a&&o.to<=t&&a.from>=t&&(r=o.type.prop(common.NodeProp.closedBy))&&r.indexOf(a.name)>-1&&e.doc.lineAt(o.to).from==e.doc.lineAt(a.from).from&&!/\S/.test(e.sliceDoc(o.to,a.from))?{from:o.to,to:a.from}:null}const insertNewlineAndIndent=newlineAndIndent(!1),insertBlankLine=newlineAndIndent(!0);function newlineAndIndent(e){return({state:t,dispatch:r})=>{if(t.readOnly)return!1;let n=t.changeByRange(r=>{let{from:n,to:o}=r,a=t.doc.lineAt(n),s=!e&&n==o&&isBetweenBrackets(t,n);e&&(n=o=(o<=a.to?a:t.doc.lineAt(o)).to);let l=new language.IndentContext(t,{simulateBreak:n,simulateDoubleBreak:!!s}),i=language.getIndentation(l,n);for(null==i&&(i=state.countColumn(/^\s*/.exec(t.doc.lineAt(n).text)[0],t.tabSize));o<a.to&&/\s/.test(a.text[o-a.from]);)o++;s?({from:n,to:o}=s):n>a.from&&n<a.from+100&&!/\S/.test(a.text.slice(0,n))&&(n=a.from);let c=["",language.indentString(t,i)];return s&&c.push(language.indentString(t,l.lineIndent(a.from,-1))),{changes:{from:n,to:o,insert:state.Text.of(c)},range:state.EditorSelection.cursor(n+1+c[1].length)}});return r(t.update(n,{scrollIntoView:!0,userEvent:"input"})),!0}}function changeBySelectedLine(e,t){let r=-1;return e.changeByRange(n=>{let o=[];for(let s=n.from;s<=n.to;){let a=e.doc.lineAt(s);a.number>r&&(n.empty||n.to>a.from)&&(t(a,o,n),r=a.number),s=a.to+1}let a=e.changes(o);return{changes:o,range:state.EditorSelection.range(a.mapPos(n.anchor,1),a.mapPos(n.head,1))}})}const indentSelection=({state:e,dispatch:t})=>{if(e.readOnly)return!1;let r=Object.create(null),n=new language.IndentContext(e,{overrideIndentation:e=>{let t=r[e];return null==t?-1:t}}),o=changeBySelectedLine(e,(t,o,a)=>{let s=language.getIndentation(n,t.from);if(null==s)return;/\S/.test(t.text)||(s=0);let l=/^\s*/.exec(t.text)[0],i=language.indentString(e,s);(l!=i||a.from<t.from+l.length)&&(r[t.from]=s,o.push({from:t.from,to:t.from+l.length,insert:i}))});return o.changes.empty||t(e.update(o,{userEvent:"indent"})),!0},indentMore=({state:e,dispatch:t})=>!e.readOnly&&(t(e.update(changeBySelectedLine(e,(t,r)=>{r.push({from:t.from,insert:e.facet(language.indentUnit)})}),{userEvent:"input.indent"})),!0),indentLess=({state:e,dispatch:t})=>!e.readOnly&&(t(e.update(changeBySelectedLine(e,(t,r)=>{let n=/^\s*/.exec(t.text)[0];if(!n)return;let o=state.countColumn(n,e.tabSize),a=0,s=language.indentString(e,Math.max(0,o-language.getIndentUnit(e)));for(;a<n.length&&a<s.length&&n.charCodeAt(a)==s.charCodeAt(a);)a++;r.push({from:t.from+a,to:t.from+n.length,insert:s.slice(a)})}),{userEvent:"delete.dedent"})),!0),toggleTabFocusMode=e=>(e.setTabFocusMode(),!0),temporarilySetTabFocusMode=e=>(e.setTabFocusMode(2e3),!0),insertTab=({state:e,dispatch:t})=>e.selection.ranges.some(e=>!e.empty)?indentMore({state:e,dispatch:t}):(t(e.update(e.replaceSelection("\t"),{scrollIntoView:!0,userEvent:"input"})),!0),emacsStyleKeymap=[{key:"Ctrl-b",run:cursorCharLeft,shift:selectCharLeft,preventDefault:!0},{key:"Ctrl-f",run:cursorCharRight,shift:selectCharRight},{key:"Ctrl-p",run:cursorLineUp,shift:selectLineUp},{key:"Ctrl-n",run:cursorLineDown,shift:selectLineDown},{key:"Ctrl-a",run:cursorLineStart,shift:selectLineStart},{key:"Ctrl-e",run:cursorLineEnd,shift:selectLineEnd},{key:"Ctrl-d",run:deleteCharForward},{key:"Ctrl-h",run:deleteCharBackward},{key:"Ctrl-k",run:deleteToLineEnd},{key:"Ctrl-Alt-h",run:deleteGroupBackward},{key:"Ctrl-o",run:splitLine},{key:"Ctrl-t",run:transposeChars},{key:"Ctrl-v",run:cursorPageDown}],standardKeymap=[{key:"ArrowLeft",run:cursorCharLeft,shift:selectCharLeft,preventDefault:!0},{key:"Mod-ArrowLeft",mac:"Alt-ArrowLeft",run:cursorGroupLeft,shift:selectGroupLeft,preventDefault:!0},{mac:"Cmd-ArrowLeft",run:cursorLineBoundaryLeft,shift:selectLineBoundaryLeft,preventDefault:!0},{key:"ArrowRight",run:cursorCharRight,shift:selectCharRight,preventDefault:!0},{key:"Mod-ArrowRight",mac:"Alt-ArrowRight",run:cursorGroupRight,shift:selectGroupRight,preventDefault:!0},{mac:"Cmd-ArrowRight",run:cursorLineBoundaryRight,shift:selectLineBoundaryRight,preventDefault:!0},{key:"ArrowUp",run:cursorLineUp,shift:selectLineUp,preventDefault:!0},{mac:"Cmd-ArrowUp",run:cursorDocStart,shift:selectDocStart},{mac:"Ctrl-ArrowUp",run:cursorPageUp,shift:selectPageUp},{key:"ArrowDown",run:cursorLineDown,shift:selectLineDown,preventDefault:!0},{mac:"Cmd-ArrowDown",run:cursorDocEnd,shift:selectDocEnd},{mac:"Ctrl-ArrowDown",run:cursorPageDown,shift:selectPageDown},{key:"PageUp",run:cursorPageUp,shift:selectPageUp},{key:"PageDown",run:cursorPageDown,shift:selectPageDown},{key:"Home",run:cursorLineBoundaryBackward,shift:selectLineBoundaryBackward,preventDefault:!0},{key:"Mod-Home",run:cursorDocStart,shift:selectDocStart},{key:"End",run:cursorLineBoundaryForward,shift:selectLineBoundaryForward,preventDefault:!0},{key:"Mod-End",run:cursorDocEnd,shift:selectDocEnd},{key:"Enter",run:insertNewlineAndIndent,shift:insertNewlineAndIndent},{key:"Mod-a",run:selectAll},{key:"Backspace",run:deleteCharBackward,shift:deleteCharBackward},{key:"Delete",run:deleteCharForward},{key:"Mod-Backspace",mac:"Alt-Backspace",run:deleteGroupBackward},{key:"Mod-Delete",mac:"Alt-Delete",run:deleteGroupForward},{mac:"Mod-Backspace",run:deleteLineBoundaryBackward},{mac:"Mod-Delete",run:deleteLineBoundaryForward}].concat(emacsStyleKeymap.map(e=>({mac:e.key,run:e.run,shift:e.shift}))),defaultKeymap=[{key:"Alt-ArrowLeft",mac:"Ctrl-ArrowLeft",run:cursorSyntaxLeft,shift:selectSyntaxLeft},{key:"Alt-ArrowRight",mac:"Ctrl-ArrowRight",run:cursorSyntaxRight,shift:selectSyntaxRight},{key:"Alt-ArrowUp",run:moveLineUp},{key:"Shift-Alt-ArrowUp",run:copyLineUp},{key:"Alt-ArrowDown",run:moveLineDown},{key:"Shift-Alt-ArrowDown",run:copyLineDown},{key:"Escape",run:simplifySelection},{key:"Mod-Enter",run:insertBlankLine},{key:"Alt-l",mac:"Ctrl-l",run:selectLine},{key:"Mod-i",run:selectParentSyntax,preventDefault:!0},{key:"Mod-[",run:indentLess},{key:"Mod-]",run:indentMore},{key:"Mod-Alt-\\",run:indentSelection},{key:"Shift-Mod-k",run:deleteLine},{key:"Shift-Mod-\\",run:cursorMatchingBracket},{key:"Mod-/",run:toggleComment},{key:"Alt-A",run:toggleBlockComment},{key:"Ctrl-m",mac:"Shift-Alt-m",run:toggleTabFocusMode}].concat(standardKeymap),indentWithTab={key:"Tab",run:indentMore,shift:indentLess};exports.blockComment=blockComment,exports.blockUncomment=blockUncomment,exports.copyLineDown=copyLineDown,exports.copyLineUp=copyLineUp,exports.cursorCharBackward=cursorCharBackward,exports.cursorCharBackwardLogical=cursorCharBackwardLogical,exports.cursorCharForward=cursorCharForward,exports.cursorCharForwardLogical=cursorCharForwardLogical,exports.cursorCharLeft=cursorCharLeft,exports.cursorCharRight=cursorCharRight,exports.cursorDocEnd=cursorDocEnd,exports.cursorDocStart=cursorDocStart,exports.cursorGroupBackward=cursorGroupBackward,exports.cursorGroupForward=cursorGroupForward,exports.cursorGroupForwardWin=cursorGroupForwardWin,exports.cursorGroupLeft=cursorGroupLeft,exports.cursorGroupRight=cursorGroupRight,exports.cursorLineBoundaryBackward=cursorLineBoundaryBackward,exports.cursorLineBoundaryForward=cursorLineBoundaryForward,exports.cursorLineBoundaryLeft=cursorLineBoundaryLeft,exports.cursorLineBoundaryRight=cursorLineBoundaryRight,exports.cursorLineDown=cursorLineDown,exports.cursorLineEnd=cursorLineEnd,exports.cursorLineStart=cursorLineStart,exports.cursorLineUp=cursorLineUp,exports.cursorMatchingBracket=cursorMatchingBracket,exports.cursorPageDown=cursorPageDown,exports.cursorPageUp=cursorPageUp,exports.cursorSubwordBackward=cursorSubwordBackward,exports.cursorSubwordForward=cursorSubwordForward,exports.cursorSyntaxLeft=cursorSyntaxLeft,exports.cursorSyntaxRight=cursorSyntaxRight,exports.defaultKeymap=defaultKeymap,exports.deleteCharBackward=deleteCharBackward,exports.deleteCharBackwardStrict=deleteCharBackwardStrict,exports.deleteCharForward=deleteCharForward,exports.deleteGroupBackward=deleteGroupBackward,exports.deleteGroupForward=deleteGroupForward,exports.deleteLine=deleteLine,exports.deleteLineBoundaryBackward=deleteLineBoundaryBackward,exports.deleteLineBoundaryForward=deleteLineBoundaryForward,exports.deleteToLineEnd=deleteToLineEnd,exports.deleteToLineStart=deleteToLineStart,exports.deleteTrailingWhitespace=deleteTrailingWhitespace,exports.emacsStyleKeymap=emacsStyleKeymap,exports.history=history,exports.historyField=historyField,exports.historyKeymap=historyKeymap,exports.indentLess=indentLess,exports.indentMore=indentMore,exports.indentSelection=indentSelection,exports.indentWithTab=indentWithTab,exports.insertBlankLine=insertBlankLine,exports.insertNewline=insertNewline,exports.insertNewlineAndIndent=insertNewlineAndIndent,exports.insertNewlineKeepIndent=insertNewlineKeepIndent,exports.insertTab=insertTab,exports.invertedEffects=invertedEffects,exports.isolateHistory=isolateHistory,exports.lineComment=lineComment,exports.lineUncomment=lineUncomment,exports.moveLineDown=moveLineDown,exports.moveLineUp=moveLineUp,exports.redo=redo,exports.redoDepth=redoDepth,exports.redoSelection=redoSelection,exports.selectAll=selectAll,exports.selectCharBackward=selectCharBackward,exports.selectCharBackwardLogical=selectCharBackwardLogical,exports.selectCharForward=selectCharForward,exports.selectCharForwardLogical=selectCharForwardLogical,exports.selectCharLeft=selectCharLeft,exports.selectCharRight=selectCharRight,exports.selectDocEnd=selectDocEnd,exports.selectDocStart=selectDocStart,exports.selectGroupBackward=selectGroupBackward,exports.selectGroupForward=selectGroupForward,exports.selectGroupForwardWin=selectGroupForwardWin,exports.selectGroupLeft=selectGroupLeft,exports.selectGroupRight=selectGroupRight,exports.selectLine=selectLine,exports.selectLineBoundaryBackward=selectLineBoundaryBackward,exports.selectLineBoundaryForward=selectLineBoundaryForward,exports.selectLineBoundaryLeft=selectLineBoundaryLeft,exports.selectLineBoundaryRight=selectLineBoundaryRight,exports.selectLineDown=selectLineDown,exports.selectLineEnd=selectLineEnd,exports.selectLineStart=selectLineStart,exports.selectLineUp=selectLineUp,exports.selectMatchingBracket=selectMatchingBracket,exports.selectPageDown=selectPageDown,exports.selectPageUp=selectPageUp,exports.selectParentSyntax=selectParentSyntax,exports.selectSubwordBackward=selectSubwordBackward,exports.selectSubwordForward=selectSubwordForward,exports.selectSyntaxLeft=selectSyntaxLeft,exports.selectSyntaxRight=selectSyntaxRight,exports.simplifySelection=simplifySelection,exports.splitLine=splitLine,exports.standardKeymap=standardKeymap,exports.temporarilySetTabFocusMode=temporarilySetTabFocusMode,exports.toggleBlockComment=toggleBlockComment,exports.toggleBlockCommentByLine=toggleBlockCommentByLine,exports.toggleComment=toggleComment,exports.toggleLineComment=toggleLineComment,exports.toggleTabFocusMode=toggleTabFocusMode,exports.transposeChars=transposeChars,exports.undo=undo,exports.undoDepth=undoDepth,exports.undoSelection=undoSelection;