"use strict";var _a,common=require("@lezer/common"),state=require("@codemirror/state"),view=require("@codemirror/view"),highlight=require("@lezer/highlight"),styleMod=require("style-mod");const languageDataProp=new common.NodeProp;function defineLanguageFacet(t){return state.Facet.define({combine:t?e=>e.concat(t):void 0})}const sublanguageProp=new common.NodeProp;class Language{constructor(t,e,n=[],r=""){this.data=t,this.name=r,state.EditorState.prototype.hasOwnProperty("tree")||Object.defineProperty(state.EditorState.prototype,"tree",{get(){return syntaxTree(this)}}),this.parser=e,this.extension=[language.of(this),state.EditorState.languageData.of((t,e,n)=>{let r=topNodeAt(t,e,n),o=r.type.prop(languageDataProp);if(!o)return[];let i=t.facet(o),s=r.type.prop(sublanguageProp);if(s){let o=r.resolve(e-r.from,n);for(let e of s)if(e.test(o,t)){let n=t.facet(e.facet);return"replace"==e.type?n:n.concat(i)}}return i})].concat(n)}isActiveAt(t,e,n=-1){return topNodeAt(t,e,n).type.prop(languageDataProp)==this.data}findRegions(t){let e=t.facet(language);if((null===e||void 0===e?void 0:e.data)==this.data)return[{from:0,to:t.doc.length}];if(!e||!e.allowsNesting)return[];let n=[],r=(t,e)=>{if(t.prop(languageDataProp)==this.data)return void n.push({from:e,to:e+t.length});let o=t.prop(common.NodeProp.mounted);if(o){if(o.tree.prop(languageDataProp)==this.data){if(o.overlay)for(let t of o.overlay)n.push({from:t.from+e,to:t.to+e});else n.push({from:e,to:e+t.length});return}if(o.overlay){let t=n.length;if(r(o.tree,o.overlay[0].from+e),n.length>t)return}}for(let n=0;n<t.children.length;n++){let o=t.children[n];o instanceof common.Tree&&r(o,t.positions[n]+e)}};return r(syntaxTree(t),0),n}get allowsNesting(){return!0}}function topNodeAt(t,e,n){let r=t.facet(language),o=syntaxTree(t).topNode;if(!r||r.allowsNesting)for(let i=o;i;i=i.enter(e,n,common.IterMode.ExcludeBuffers))i.type.isTop&&(o=i);return o}Language.setState=state.StateEffect.define();class LRLanguage extends Language{constructor(t,e,n){super(t,e,[],n),this.parser=e}static define(t){let e=defineLanguageFacet(t.languageData);return new LRLanguage(e,t.parser.configure({props:[languageDataProp.add(t=>t.isTop?e:void 0)]}),t.name)}configure(t,e){return new LRLanguage(this.data,this.parser.configure(t),e||this.name)}get allowsNesting(){return this.parser.hasWrappers()}}function syntaxTree(t){let e=t.field(Language.state,!1);return e?e.tree:common.Tree.empty}function ensureSyntaxTree(t,e,n=50){var r;let o=null===(r=t.field(Language.state,!1))||void 0===r?void 0:r.context;if(!o)return null;let i=o.viewport;o.updateViewport({from:0,to:e});let s=o.isDone(e)||o.work(n,e)?o.tree:null;return o.updateViewport(i),s}function syntaxTreeAvailable(t,e=t.doc.length){var n;return(null===(n=t.field(Language.state,!1))||void 0===n?void 0:n.context.isDone(e))||!1}function forceParsing(t,e=t.viewport.to,n=100){let r=ensureSyntaxTree(t.state,e,n);return r!=syntaxTree(t.state)&&t.dispatch({}),!!r}function syntaxParserRunning(t){var e;return(null===(e=t.plugin(parseWorker))||void 0===e?void 0:e.isWorking())||!1}class DocInput{constructor(t){this.doc=t,this.cursorPos=0,this.string="",this.cursor=t.iter()}get length(){return this.doc.length}syncTo(t){return this.string=this.cursor.next(t-this.cursorPos).value,this.cursorPos=t+this.string.length,this.cursorPos-this.string.length}chunk(t){return this.syncTo(t),this.string}get lineChunks(){return!0}read(t,e){let n=this.cursorPos-this.string.length;return t<n||e>=this.cursorPos?this.doc.sliceString(t,e):this.string.slice(t-n,e-n)}}let currentContext=null;class ParseContext{constructor(t,e,n=[],r,o,i,s,a){this.parser=t,this.state=e,this.fragments=n,this.tree=r,this.treeLen=o,this.viewport=i,this.skipped=s,this.scheduleOn=a,this.parse=null,this.tempSkipped=[]}static create(t,e,n){return new ParseContext(t,e,[],common.Tree.empty,0,n,[],null)}startParse(){return this.parser.startParse(new DocInput(this.state.doc),this.fragments)}work(t,e){return null!=e&&e>=this.state.doc.length&&(e=void 0),this.tree!=common.Tree.empty&&this.isDone(null!==e&&void 0!==e?e:this.state.doc.length)?(this.takeTree(),!0):this.withContext(()=>{var n;if("number"==typeof t){let e=Date.now()+t;t=()=>Date.now()>e}for(this.parse||(this.parse=this.startParse()),null!=e&&(null==this.parse.stoppedAt||this.parse.stoppedAt>e)&&e<this.state.doc.length&&this.parse.stopAt(e);;){let r=this.parse.advance();if(r){if(this.fragments=this.withoutTempSkipped(common.TreeFragment.addTree(r,this.fragments,null!=this.parse.stoppedAt)),this.treeLen=null!==(n=this.parse.stoppedAt)&&void 0!==n?n:this.state.doc.length,this.tree=r,this.parse=null,!(this.treeLen<(null!==e&&void 0!==e?e:this.state.doc.length)))return!0;this.parse=this.startParse()}if(t())return!1}})}takeTree(){let t,e;this.parse&&(t=this.parse.parsedPos)>=this.treeLen&&((null==this.parse.stoppedAt||this.parse.stoppedAt>t)&&this.parse.stopAt(t),this.withContext(()=>{for(;!(e=this.parse.advance()););}),this.treeLen=t,this.tree=e,this.fragments=this.withoutTempSkipped(common.TreeFragment.addTree(this.tree,this.fragments,!0)),this.parse=null)}withContext(t){let e=currentContext;currentContext=this;try{return t()}finally{currentContext=e}}withoutTempSkipped(t){for(let e;e=this.tempSkipped.pop();)t=cutFragments(t,e.from,e.to);return t}changes(t,e){let{fragments:n,tree:r,treeLen:o,viewport:i,skipped:s}=this;if(this.takeTree(),!t.empty){let e=[];if(t.iterChangedRanges((t,n,r,o)=>e.push({fromA:t,toA:n,fromB:r,toB:o})),n=common.TreeFragment.applyChanges(n,e),r=common.Tree.empty,o=0,i={from:t.mapPos(i.from,-1),to:t.mapPos(i.to,1)},this.skipped.length){s=[];for(let e of this.skipped){let n=t.mapPos(e.from,1),r=t.mapPos(e.to,-1);n<r&&s.push({from:n,to:r})}}}return new ParseContext(this.parser,e,n,r,o,i,s,this.scheduleOn)}updateViewport(t){if(this.viewport.from==t.from&&this.viewport.to==t.to)return!1;this.viewport=t;let e=this.skipped.length;for(let n=0;n<this.skipped.length;n++){let{from:e,to:r}=this.skipped[n];e<t.to&&r>t.from&&(this.fragments=cutFragments(this.fragments,e,r),this.skipped.splice(n--,1))}return!(this.skipped.length>=e)&&(this.reset(),!0)}reset(){this.parse&&(this.takeTree(),this.parse=null)}skipUntilInView(t,e){this.skipped.push({from:t,to:e})}static getSkippingParser(t){return new class extends common.Parser{createParse(e,n,r){let o=r[0].from,i=r[r.length-1].to;return{parsedPos:o,advance(){let e=currentContext;if(e){for(let t of r)e.tempSkipped.push(t);t&&(e.scheduleOn=e.scheduleOn?Promise.all([e.scheduleOn,t]):t)}return this.parsedPos=i,new common.Tree(common.NodeType.none,[],[],i-o)},stoppedAt:null,stopAt(){}}}}}isDone(t){t=Math.min(t,this.state.doc.length);let e=this.fragments;return this.treeLen>=t&&e.length&&0==e[0].from&&e[0].to>=t}static get(){return currentContext}}function cutFragments(t,e,n){return common.TreeFragment.applyChanges(t,[{fromA:e,toA:n,fromB:e,toB:n}])}class LanguageState{constructor(t){this.context=t,this.tree=t.tree}apply(t){if(!t.docChanged&&this.tree==this.context.tree)return this;let e=this.context.changes(t.changes,t.state),n=this.context.treeLen==t.startState.doc.length?void 0:Math.max(t.changes.mapPos(this.context.treeLen),e.viewport.to);return e.work(20,n)||e.takeTree(),new LanguageState(e)}static init(t){let e=Math.min(3e3,t.doc.length),n=ParseContext.create(t.facet(language).parser,t,{from:0,to:e});return n.work(20,e)||n.takeTree(),new LanguageState(n)}}Language.state=state.StateField.define({create:LanguageState.init,update(t,e){for(let n of e.effects)if(n.is(Language.setState))return n.value;return e.startState.facet(language)!=e.state.facet(language)?LanguageState.init(e.state):t.apply(e)}});let requestIdle=t=>{let e=setTimeout(()=>t(),500);return()=>clearTimeout(e)};"undefined"!=typeof requestIdleCallback&&(requestIdle=t=>{let e=-1,n=setTimeout(()=>{e=requestIdleCallback(t,{timeout:400})},100);return()=>e<0?clearTimeout(n):cancelIdleCallback(e)});const isInputPending="undefined"!=typeof navigator&&(null===(_a=navigator.scheduling)||void 0===_a?void 0:_a.isInputPending)?()=>navigator.scheduling.isInputPending():null,parseWorker=view.ViewPlugin.fromClass(class{constructor(t){this.view=t,this.working=null,this.workScheduled=0,this.chunkEnd=-1,this.chunkBudget=-1,this.work=this.work.bind(this),this.scheduleWork()}update(t){let e=this.view.state.field(Language.state).context;(e.updateViewport(t.view.viewport)||this.view.viewport.to>e.treeLen)&&this.scheduleWork(),(t.docChanged||t.selectionSet)&&(this.view.hasFocus&&(this.chunkBudget+=50),this.scheduleWork()),this.checkAsyncSchedule(e)}scheduleWork(){if(this.working)return;let{state:t}=this.view,e=t.field(Language.state);e.tree==e.context.tree&&e.context.isDone(t.doc.length)||(this.working=requestIdle(this.work))}work(t){this.working=null;let e=Date.now();if(this.chunkEnd<e&&(this.chunkEnd<0||this.view.hasFocus)&&(this.chunkEnd=e+3e4,this.chunkBudget=3e3),this.chunkBudget<=0)return;let{state:n,viewport:{to:r}}=this.view,o=n.field(Language.state);if(o.tree==o.context.tree&&o.context.isDone(r+1e5))return;let i=Date.now()+Math.min(this.chunkBudget,100,t&&!isInputPending?Math.max(25,t.timeRemaining()-5):1e9),s=o.context.treeLen<r&&n.doc.length>r+1e3,a=o.context.work(()=>isInputPending&&isInputPending()||Date.now()>i,r+(s?0:1e5));this.chunkBudget-=Date.now()-e,(a||this.chunkBudget<=0)&&(o.context.takeTree(),this.view.dispatch({effects:Language.setState.of(new LanguageState(o.context))})),this.chunkBudget>0&&(!a||s)&&this.scheduleWork(),this.checkAsyncSchedule(o.context)}checkAsyncSchedule(t){t.scheduleOn&&(this.workScheduled++,t.scheduleOn.then(()=>this.scheduleWork()).catch(t=>view.logException(this.view.state,t)).then(()=>this.workScheduled--),t.scheduleOn=null)}destroy(){this.working&&this.working()}isWorking(){return!!(this.working||this.workScheduled>0)}},{eventHandlers:{focus(){this.scheduleWork()}}}),language=state.Facet.define({combine:t=>t.length?t[0]:null,enables:t=>[Language.state,parseWorker,view.EditorView.contentAttributes.compute([t],e=>{let n=e.facet(t);return n&&n.name?{"data-language":n.name}:{}})]});class LanguageSupport{constructor(t,e=[]){this.language=t,this.support=e,this.extension=[t,e]}}class LanguageDescription{constructor(t,e,n,r,o,i=void 0){this.name=t,this.alias=e,this.extensions=n,this.filename=r,this.loadFunc=o,this.support=i,this.loading=null}load(){return this.loading||(this.loading=this.loadFunc().then(t=>this.support=t,t=>{throw this.loading=null,t}))}static of(t){let{load:e,support:n}=t;if(!e){if(!n)throw new RangeError("Must pass either 'load' or 'support' to LanguageDescription.of");e=()=>Promise.resolve(n)}return new LanguageDescription(t.name,(t.alias||[]).concat(t.name).map(t=>t.toLowerCase()),t.extensions||[],t.filename,e,n)}static matchFilename(t,e){for(let r of t)if(r.filename&&r.filename.test(e))return r;let n=/\.([^.]+)$/.exec(e);if(n)for(let r of t)if(r.extensions.indexOf(n[1])>-1)return r;return null}static matchLanguageName(t,e,n=!0){e=e.toLowerCase();for(let r of t)if(r.alias.some(t=>t==e))return r;if(n)for(let r of t)for(let t of r.alias){let n=e.indexOf(t);if(n>-1&&(t.length>2||!/\w/.test(e[n-1])&&!/\w/.test(e[n+t.length])))return r}return null}}const indentService=state.Facet.define(),indentUnit=state.Facet.define({combine:t=>{if(!t.length)return"  ";let e=t[0];if(!e||/\S/.test(e)||Array.from(e).some(t=>t!=e[0]))throw new Error("Invalid indent unit: "+JSON.stringify(t[0]));return e}});function getIndentUnit(t){let e=t.facet(indentUnit);return 9==e.charCodeAt(0)?t.tabSize*e.length:e.length}function indentString(t,e){let n="",r=t.tabSize,o=t.facet(indentUnit)[0];if("\t"==o){for(;e>=r;)n+="\t",e-=r;o=" "}for(let i=0;i<e;i++)n+=o;return n}function getIndentation(t,e){t instanceof state.EditorState&&(t=new IndentContext(t));for(let r of t.state.facet(indentService)){let n=r(t,e);if(void 0!==n)return n}let n=syntaxTree(t.state);return n.length>=e?syntaxIndentation(t,n,e):null}function indentRange(t,e,n){let r=Object.create(null),o=new IndentContext(t,{overrideIndentation:t=>{var e;return null!==(e=r[t])&&void 0!==e?e:-1}}),i=[];for(let s=e;s<=n;){let e=t.doc.lineAt(s);s=e.to+1;let n=getIndentation(o,e.from);if(null==n)continue;/\S/.test(e.text)||(n=0);let a=/^\s*/.exec(e.text)[0],l=indentString(t,n);a!=l&&(r[e.from]=n,i.push({from:e.from,to:e.from+a.length,insert:l}))}return t.changes(i)}class IndentContext{constructor(t,e={}){this.state=t,this.options=e,this.unit=getIndentUnit(t)}lineAt(t,e=1){let n=this.state.doc.lineAt(t),{simulateBreak:r,simulateDoubleBreak:o}=this.options;return null!=r&&r>=n.from&&r<=n.to?o&&r==t?{text:"",from:t}:(e<0?r<t:r<=t)?{text:n.text.slice(r-n.from),from:r}:{text:n.text.slice(0,r-n.from),from:n.from}:n}textAfterPos(t,e=1){if(this.options.simulateDoubleBreak&&t==this.options.simulateBreak)return"";let{text:n,from:r}=this.lineAt(t,e);return n.slice(t-r,Math.min(n.length,t+100-r))}column(t,e=1){let{text:n,from:r}=this.lineAt(t,e),o=this.countColumn(n,t-r),i=this.options.overrideIndentation?this.options.overrideIndentation(r):-1;return i>-1&&(o+=i-this.countColumn(n,n.search(/\S|$/))),o}countColumn(t,e=t.length){return state.countColumn(t,this.state.tabSize,e)}lineIndent(t,e=1){let{text:n,from:r}=this.lineAt(t,e),o=this.options.overrideIndentation;if(o){let t=o(r);if(t>-1)return t}return this.countColumn(n,n.search(/\S|$/))}get simulatedBreak(){return this.options.simulateBreak||null}}const indentNodeProp=new common.NodeProp;function syntaxIndentation(t,e,n){let r=e.resolveStack(n),o=e.resolveInner(n,-1).resolve(n,0).enterUnfinishedNodesBefore(n);if(o!=r.node){let t=[];for(let e=o;e&&!(e.from<r.node.from||e.to>r.node.to||e.from==r.node.from&&e.type==r.node.type);e=e.parent)t.push(e);for(let e=t.length-1;e>=0;e--)r={node:t[e],next:r}}return indentFor(r,t,n)}function indentFor(t,e,n){for(let r=t;r;r=r.next){let t=indentStrategy(r.node);if(t)return t(TreeIndentContext.create(e,n,r))}return 0}function ignoreClosed(t){return t.pos==t.options.simulateBreak&&t.options.simulateDoubleBreak}function indentStrategy(t){let e=t.type.prop(indentNodeProp);if(e)return e;let n,r=t.firstChild;if(r&&(n=r.type.prop(common.NodeProp.closedBy))){let e=t.lastChild,r=e&&n.indexOf(e.name)>-1;return t=>delimitedStrategy(t,!0,1,void 0,r&&!ignoreClosed(t)?e.from:void 0)}return null==t.parent?topIndent:null}function topIndent(){return 0}class TreeIndentContext extends IndentContext{constructor(t,e,n){super(t.state,t.options),this.base=t,this.pos=e,this.context=n}get node(){return this.context.node}static create(t,e,n){return new TreeIndentContext(t,e,n)}get textAfter(){return this.textAfterPos(this.pos)}get baseIndent(){return this.baseIndentFor(this.node)}baseIndentFor(t){let e=this.state.doc.lineAt(t.from);for(;;){let n=t.resolve(e.from);for(;n.parent&&n.parent.from==n.from;)n=n.parent;if(isParent(n,t))break;e=this.state.doc.lineAt(n.from)}return this.lineIndent(e.from)}continue(){return indentFor(this.context.next,this.base,this.pos)}}function isParent(t,e){for(let n=e;n;n=n.parent)if(t==n)return!0;return!1}function bracketedAligned(t){let e=t.node,n=e.childAfter(e.from),r=e.lastChild;if(!n)return null;let o=t.options.simulateBreak,i=t.state.doc.lineAt(n.from),s=null==o||o<=i.from?i.to:Math.min(i.to,o);for(let a=n.to;;){let t=e.childAfter(a);if(!t||t==r)return null;if(!t.type.isSkipped){if(t.from>=s)return null;let e=/^ */.exec(i.text.slice(n.to-i.from))[0].length;return{from:n.from,to:n.to+e}}a=t.to}}function delimitedIndent({closing:t,align:e=!0,units:n=1}){return r=>delimitedStrategy(r,e,n,t)}function delimitedStrategy(t,e,n,r,o){let i=t.textAfter,s=i.match(/^\s*/)[0].length,a=r&&i.slice(s,s+r.length)==r||o==t.pos+s,l=e?bracketedAligned(t):null;return l?a?t.column(l.from):t.column(l.to):t.baseIndent+(a?0:t.unit*n)}const flatIndent=t=>t.baseIndent;function continuedIndent({except:t,units:e=1}={}){return n=>{let r=t&&t.test(n.textAfter);return n.baseIndent+(r?0:e*n.unit)}}const DontIndentBeyond=200;function indentOnInput(){return state.EditorState.transactionFilter.of(t=>{if(!t.docChanged||!t.isUserEvent("input.type")&&!t.isUserEvent("input.complete"))return t;let e=t.startState.languageDataAt("indentOnInput",t.startState.selection.main.head);if(!e.length)return t;let n=t.newDoc,{head:r}=t.newSelection.main,o=n.lineAt(r);if(r>o.from+200)return t;let i=n.sliceString(o.from,r);if(!e.some(t=>t.test(i)))return t;let{state:s}=t,a=-1,l=[];for(let{head:h}of s.selection.ranges){let t=s.doc.lineAt(h);if(t.from==a)continue;a=t.from;let e=getIndentation(s,t.from);if(null==e)continue;let n=/^\s*/.exec(t.text)[0],r=indentString(s,e);n!=r&&l.push({from:t.from,to:t.from+n.length,insert:r})}return l.length?[t,{changes:l,sequential:!0}]:t})}const foldService=state.Facet.define(),foldNodeProp=new common.NodeProp;function foldInside(t){let e=t.firstChild,n=t.lastChild;return e&&e.to<n.from?{from:e.to,to:n.type.isError?t.to:n.from}:null}function syntaxFolding(t,e,n){let r=syntaxTree(t);if(r.length<n)return null;let o=null;for(let i=r.resolveStack(n,1);i;i=i.next){let s=i.node;if(s.to<=n||s.from>n)continue;if(o&&s.from<e)break;let a=s.type.prop(foldNodeProp);if(a&&(s.to<r.length-50||r.length==t.doc.length||!isUnfinished(s))){let r=a(s,t);r&&r.from<=n&&r.from>=e&&r.to>n&&(o=r)}}return o}function isUnfinished(t){let e=t.lastChild;return e&&e.to==t.to&&e.type.isError}function foldable(t,e,n){for(let r of t.facet(foldService)){let o=r(t,e,n);if(o)return o}return syntaxFolding(t,e,n)}function mapRange(t,e){let n=e.mapPos(t.from,1),r=e.mapPos(t.to,-1);return n>=r?void 0:{from:n,to:r}}const foldEffect=state.StateEffect.define({map:mapRange}),unfoldEffect=state.StateEffect.define({map:mapRange});function selectedLines(t){let e=[];for(let{head:n}of t.state.selection.ranges)e.some(t=>t.from<=n&&t.to>=n)||e.push(t.lineBlockAt(n));return e}const foldState=state.StateField.define({create:()=>view.Decoration.none,update(t,e){e.isUserEvent("delete")&&e.changes.iterChangedRanges((e,n)=>t=clearTouchedFolds(t,e,n)),t=t.map(e.changes);for(let n of e.effects)if(n.is(foldEffect)&&!foldExists(t,n.value.from,n.value.to)){let{preparePlaceholder:r}=e.state.facet(foldConfig),o=r?view.Decoration.replace({widget:new PreparedFoldWidget(r(e.state,n.value))}):foldWidget;t=t.update({add:[o.range(n.value.from,n.value.to)]})}else n.is(unfoldEffect)&&(t=t.update({filter:(t,e)=>n.value.from!=t||n.value.to!=e,filterFrom:n.value.from,filterTo:n.value.to}));return e.selection&&(t=clearTouchedFolds(t,e.selection.main.head)),t},provide:t=>view.EditorView.decorations.from(t),toJSON(t,e){let n=[];return t.between(0,e.doc.length,(t,e)=>{n.push(t,e)}),n},fromJSON(t){if(!Array.isArray(t)||t.length%2)throw new RangeError("Invalid JSON for fold state");let e=[];for(let n=0;n<t.length;){let r=t[n++],o=t[n++];if("number"!=typeof r||"number"!=typeof o)throw new RangeError("Invalid JSON for fold state");e.push(foldWidget.range(r,o))}return view.Decoration.set(e,!0)}});function clearTouchedFolds(t,e,n=e){let r=!1;return t.between(e,n,(t,o)=>{t<n&&o>e&&(r=!0)}),r?t.update({filterFrom:e,filterTo:n,filter:(t,r)=>t>=n||r<=e}):t}function foldedRanges(t){return t.field(foldState,!1)||state.RangeSet.empty}function findFold(t,e,n){var r;let o=null;return null===(r=t.field(foldState,!1))||void 0===r||r.between(e,n,(t,e)=>{(!o||o.from>t)&&(o={from:t,to:e})}),o}function foldExists(t,e,n){let r=!1;return t.between(e,e,(t,o)=>{t==e&&o==n&&(r=!0)}),r}function maybeEnable(t,e){return t.field(foldState,!1)?e:e.concat(state.StateEffect.appendConfig.of(codeFolding()))}const foldCode=t=>{for(let e of selectedLines(t)){let n=foldable(t.state,e.from,e.to);if(n)return t.dispatch({effects:maybeEnable(t.state,[foldEffect.of(n),announceFold(t,n)])}),!0}return!1},unfoldCode=t=>{if(!t.state.field(foldState,!1))return!1;let e=[];for(let n of selectedLines(t)){let r=findFold(t.state,n.from,n.to);r&&e.push(unfoldEffect.of(r),announceFold(t,r,!1))}return e.length&&t.dispatch({effects:e}),e.length>0};function announceFold(t,e,n=!0){let r=t.state.doc.lineAt(e.from).number,o=t.state.doc.lineAt(e.to).number;return view.EditorView.announce.of(`${t.state.phrase(n?"Folded lines":"Unfolded lines")} ${r} ${t.state.phrase("to")} ${o}.`)}const foldAll=t=>{let{state:e}=t,n=[];for(let r=0;r<e.doc.length;){let o=t.lineBlockAt(r),i=foldable(e,o.from,o.to);i&&n.push(foldEffect.of(i)),r=(i?t.lineBlockAt(i.to):o).to+1}return n.length&&t.dispatch({effects:maybeEnable(t.state,n)}),!!n.length},unfoldAll=t=>{let e=t.state.field(foldState,!1);if(!e||!e.size)return!1;let n=[];return e.between(0,t.state.doc.length,(t,e)=>{n.push(unfoldEffect.of({from:t,to:e}))}),t.dispatch({effects:n}),!0};function foldableContainer(t,e){for(let n=e;;){let r=foldable(t.state,n.from,n.to);if(r&&r.to>e.from)return r;if(!n.from)return null;n=t.lineBlockAt(n.from-1)}}const toggleFold=t=>{let e=[];for(let n of selectedLines(t)){let r=findFold(t.state,n.from,n.to);if(r)e.push(unfoldEffect.of(r),announceFold(t,r,!1));else{let r=foldableContainer(t,n);r&&e.push(foldEffect.of(r),announceFold(t,r))}}return e.length>0&&t.dispatch({effects:maybeEnable(t.state,e)}),!!e.length},foldKeymap=[{key:"Ctrl-Shift-[",mac:"Cmd-Alt-[",run:foldCode},{key:"Ctrl-Shift-]",mac:"Cmd-Alt-]",run:unfoldCode},{key:"Ctrl-Alt-[",run:foldAll},{key:"Ctrl-Alt-]",run:unfoldAll}],defaultConfig={placeholderDOM:null,preparePlaceholder:null,placeholderText:"\u2026"},foldConfig=state.Facet.define({combine:t=>state.combineConfig(t,defaultConfig)});function codeFolding(t){let e=[foldState,baseTheme$1];return t&&e.push(foldConfig.of(t)),e}function widgetToDOM(t,e){let{state:n}=t,r=n.facet(foldConfig),o=e=>{let n=t.lineBlockAt(t.posAtDOM(e.target)),r=findFold(t.state,n.from,n.to);r&&t.dispatch({effects:unfoldEffect.of(r)}),e.preventDefault()};if(r.placeholderDOM)return r.placeholderDOM(t,o,e);let i=document.createElement("span");return i.textContent=r.placeholderText,i.setAttribute("aria-label",n.phrase("folded code")),i.title=n.phrase("unfold"),i.className="cm-foldPlaceholder",i.onclick=o,i}const foldWidget=view.Decoration.replace({widget:new class extends view.WidgetType{toDOM(t){return widgetToDOM(t,null)}}});class PreparedFoldWidget extends view.WidgetType{constructor(t){super(),this.value=t}eq(t){return this.value==t.value}toDOM(t){return widgetToDOM(t,this.value)}}const foldGutterDefaults={openText:"\u2304",closedText:"\u203a",markerDOM:null,domEventHandlers:{},foldingChanged:()=>!1};class FoldMarker extends view.GutterMarker{constructor(t,e){super(),this.config=t,this.open=e}eq(t){return this.config==t.config&&this.open==t.open}toDOM(t){if(this.config.markerDOM)return this.config.markerDOM(this.open);let e=document.createElement("span");return e.textContent=this.open?this.config.openText:this.config.closedText,e.title=t.state.phrase(this.open?"Fold line":"Unfold line"),e}}function foldGutter(t={}){let e={...foldGutterDefaults,...t},n=new FoldMarker(e,!0),r=new FoldMarker(e,!1),o=view.ViewPlugin.fromClass(class{constructor(t){this.from=t.viewport.from,this.markers=this.buildMarkers(t)}update(t){(t.docChanged||t.viewportChanged||t.startState.facet(language)!=t.state.facet(language)||t.startState.field(foldState,!1)!=t.state.field(foldState,!1)||syntaxTree(t.startState)!=syntaxTree(t.state)||e.foldingChanged(t))&&(this.markers=this.buildMarkers(t.view))}buildMarkers(t){let e=new state.RangeSetBuilder;for(let o of t.viewportLineBlocks){let i=findFold(t.state,o.from,o.to)?r:foldable(t.state,o.from,o.to)?n:null;i&&e.add(o.from,o.from,i)}return e.finish()}}),{domEventHandlers:i}=e;return[o,view.gutter({class:"cm-foldGutter",markers(t){var e;return(null===(e=t.plugin(o))||void 0===e?void 0:e.markers)||state.RangeSet.empty},initialSpacer:()=>new FoldMarker(e,!1),domEventHandlers:{...i,click:(t,e,n)=>{if(i.click&&i.click(t,e,n))return!0;let r=findFold(t.state,e.from,e.to);if(r)return t.dispatch({effects:unfoldEffect.of(r)}),!0;let o=foldable(t.state,e.from,e.to);return!!o&&(t.dispatch({effects:foldEffect.of(o)}),!0)}}}),codeFolding()]}const baseTheme$1=view.EditorView.baseTheme({".cm-foldPlaceholder":{backgroundColor:"#eee",border:"1px solid #ddd",color:"#888",borderRadius:".2em",margin:"0 1px",padding:"0 1px",cursor:"pointer"},".cm-foldGutter span":{padding:"0 1px",cursor:"pointer"}});class HighlightStyle{constructor(t,e){let n;function r(t){let e=styleMod.StyleModule.newName();return(n||(n=Object.create(null)))["."+e]=t,e}this.specs=t;const o="string"==typeof e.all?e.all:e.all?r(e.all):void 0,i=e.scope;this.scope=i instanceof Language?t=>t.prop(languageDataProp)==i.data:i?t=>t==i:void 0,this.style=highlight.tagHighlighter(t.map(t=>({tag:t.tag,class:t.class||r(Object.assign({},t,{tag:null}))})),{all:o}).style,this.module=n?new styleMod.StyleModule(n):null,this.themeType=e.themeType}static define(t,e){return new HighlightStyle(t,e||{})}}const highlighterFacet=state.Facet.define(),fallbackHighlighter=state.Facet.define({combine:t=>t.length?[t[0]]:null});function getHighlighters(t){let e=t.facet(highlighterFacet);return e.length?e:t.facet(fallbackHighlighter)}function syntaxHighlighting(t,e){let n,r=[treeHighlighter];return t instanceof HighlightStyle&&(t.module&&r.push(view.EditorView.styleModule.of(t.module)),n=t.themeType),(null===e||void 0===e?void 0:e.fallback)?r.push(fallbackHighlighter.of(t)):n?r.push(highlighterFacet.computeN([view.EditorView.darkTheme],e=>e.facet(view.EditorView.darkTheme)==("dark"==n)?[t]:[])):r.push(highlighterFacet.of(t)),r}function highlightingFor(t,e,n){let r=getHighlighters(t),o=null;if(r)for(let i of r)if(!i.scope||n&&i.scope(n)){let t=i.style(e);t&&(o=o?o+" "+t:t)}return o}class TreeHighlighter{constructor(t){this.markCache=Object.create(null),this.tree=syntaxTree(t.state),this.decorations=this.buildDeco(t,getHighlighters(t.state)),this.decoratedTo=t.viewport.to}update(t){let e=syntaxTree(t.state),n=getHighlighters(t.state),r=n!=getHighlighters(t.startState),{viewport:o}=t.view,i=t.changes.mapPos(this.decoratedTo,1);e.length<o.to&&!r&&e.type==this.tree.type&&i>=o.to?(this.decorations=this.decorations.map(t.changes),this.decoratedTo=i):(e!=this.tree||t.viewportChanged||r)&&(this.tree=e,this.decorations=this.buildDeco(t.view,n),this.decoratedTo=o.to)}buildDeco(t,e){if(!e||!this.tree.length)return view.Decoration.none;let n=new state.RangeSetBuilder;for(let{from:r,to:o}of t.visibleRanges)highlight.highlightTree(this.tree,e,(t,e,r)=>{n.add(t,e,this.markCache[r]||(this.markCache[r]=view.Decoration.mark({class:r})))},r,o);return n.finish()}}const treeHighlighter=state.Prec.high(view.ViewPlugin.fromClass(TreeHighlighter,{decorations:t=>t.decorations})),defaultHighlightStyle=HighlightStyle.define([{tag:highlight.tags.meta,color:"#404740"},{tag:highlight.tags.link,textDecoration:"underline"},{tag:highlight.tags.heading,textDecoration:"underline",fontWeight:"bold"},{tag:highlight.tags.emphasis,fontStyle:"italic"},{tag:highlight.tags.strong,fontWeight:"bold"},{tag:highlight.tags.strikethrough,textDecoration:"line-through"},{tag:highlight.tags.keyword,color:"#708"},{tag:[highlight.tags.atom,highlight.tags.bool,highlight.tags.url,highlight.tags.contentSeparator,highlight.tags.labelName],color:"#219"},{tag:[highlight.tags.literal,highlight.tags.inserted],color:"#164"},{tag:[highlight.tags.string,highlight.tags.deleted],color:"#a11"},{tag:[highlight.tags.regexp,highlight.tags.escape,highlight.tags.special(highlight.tags.string)],color:"#e40"},{tag:highlight.tags.definition(highlight.tags.variableName),color:"#00f"},{tag:highlight.tags.local(highlight.tags.variableName),color:"#30a"},{tag:[highlight.tags.typeName,highlight.tags.namespace],color:"#085"},{tag:highlight.tags.className,color:"#167"},{tag:[highlight.tags.special(highlight.tags.variableName),highlight.tags.macroName],color:"#256"},{tag:highlight.tags.definition(highlight.tags.propertyName),color:"#00c"},{tag:highlight.tags.comment,color:"#940"},{tag:highlight.tags.invalid,color:"#f00"}]),baseTheme=view.EditorView.baseTheme({"&.cm-focused .cm-matchingBracket":{backgroundColor:"#328c8252"},"&.cm-focused .cm-nonmatchingBracket":{backgroundColor:"#bb555544"}}),DefaultScanDist=1e4,DefaultBrackets="()[]{}",bracketMatchingConfig=state.Facet.define({combine:t=>state.combineConfig(t,{afterCursor:!0,brackets:"()[]{}",maxScanDistance:1e4,renderMatch:defaultRenderMatch})}),matchingMark=view.Decoration.mark({class:"cm-matchingBracket"}),nonmatchingMark=view.Decoration.mark({class:"cm-nonmatchingBracket"});function defaultRenderMatch(t){let e=[],n=t.matched?matchingMark:nonmatchingMark;return e.push(n.range(t.start.from,t.start.to)),t.end&&e.push(n.range(t.end.from,t.end.to)),e}const bracketMatchingState=state.StateField.define({create:()=>view.Decoration.none,update(t,e){if(!e.docChanged&&!e.selection)return t;let n=[],r=e.state.facet(bracketMatchingConfig);for(let o of e.state.selection.ranges){if(!o.empty)continue;let t=matchBrackets(e.state,o.head,-1,r)||o.head>0&&matchBrackets(e.state,o.head-1,1,r)||r.afterCursor&&(matchBrackets(e.state,o.head,1,r)||o.head<e.state.doc.length&&matchBrackets(e.state,o.head+1,-1,r));t&&(n=n.concat(r.renderMatch(t,e.state)))}return view.Decoration.set(n,!0)},provide:t=>view.EditorView.decorations.from(t)}),bracketMatchingUnique=[bracketMatchingState,baseTheme];function bracketMatching(t={}){return[bracketMatchingConfig.of(t),bracketMatchingUnique]}const bracketMatchingHandle=new common.NodeProp;function matchingNodes(t,e,n){let r=t.prop(e<0?common.NodeProp.openedBy:common.NodeProp.closedBy);if(r)return r;if(1==t.name.length){let r=n.indexOf(t.name);if(r>-1&&r%2==(e<0?1:0))return[n[r+e]]}return null}function findHandle(t){let e=t.type.prop(bracketMatchingHandle);return e?e(t.node):t}function matchBrackets(t,e,n,r={}){let o=r.maxScanDistance||1e4,i=r.brackets||"()[]{}",s=syntaxTree(t),a=s.resolveInner(e,n);for(let l=a;l;l=l.parent){let r=matchingNodes(l.type,n,i);if(r&&l.from<l.to){let o=findHandle(l);if(o&&(n>0?e>=o.from&&e<o.to:e>o.from&&e<=o.to))return matchMarkedBrackets(t,e,n,l,o,r,i)}}return matchPlainBrackets(t,e,n,s,a.type,o,i)}function matchMarkedBrackets(t,e,n,r,o,i,s){let a=r.parent,l={from:o.from,to:o.to},h=0,d=null===a||void 0===a?void 0:a.cursor();if(d&&(n<0?d.childBefore(r.from):d.childAfter(r.to)))do{if(n<0?d.to<=r.from:d.from>=r.to){if(0==h&&i.indexOf(d.type.name)>-1&&d.from<d.to){let t=findHandle(d);return{start:l,end:t?{from:t.from,to:t.to}:void 0,matched:!0}}if(matchingNodes(d.type,n,s))h++;else if(matchingNodes(d.type,-n,s)){if(0==h){let t=findHandle(d);return{start:l,end:t&&t.from<t.to?{from:t.from,to:t.to}:void 0,matched:!1}}h--}}}while(n<0?d.prevSibling():d.nextSibling());return{start:l,matched:!1}}function matchPlainBrackets(t,e,n,r,o,i,s){let a=n<0?t.sliceDoc(e-1,e):t.sliceDoc(e,e+1),l=s.indexOf(a);if(l<0||l%2==0!=n>0)return null;let h={from:n<0?e-1:e,to:n>0?e+1:e},d=t.doc.iterRange(e,n>0?t.doc.length:0),c=0;for(let u=0;!d.next().done&&u<=i;){let t=d.value;n<0&&(u+=t.length);let i=e+u*n;for(let e=n>0?0:t.length-1,a=n>0?t.length:-1;e!=a;e+=n){let a=s.indexOf(t[e]);if(!(a<0||r.resolveInner(i+e,1).type!=o))if(a%2==0==n>0)c++;else{if(1==c)return{start:h,end:{from:i+e,to:i+e+1},matched:a>>1==l>>1};c--}}n>0&&(u+=t.length)}return d.done?{start:h,matched:!1}:null}function countCol(t,e,n,r=0,o=0){null==e&&-1==(e=t.search(/[^\s\u00a0]/))&&(e=t.length);let i=o;for(let s=r;s<e;s++)9==t.charCodeAt(s)?i+=n-i%n:i++;return i}class StringStream{constructor(t,e,n,r){this.string=t,this.tabSize=e,this.indentUnit=n,this.overrideIndent=r,this.pos=0,this.start=0,this.lastColumnPos=0,this.lastColumnValue=0}eol(){return this.pos>=this.string.length}sol(){return 0==this.pos}peek(){return this.string.charAt(this.pos)||void 0}next(){if(this.pos<this.string.length)return this.string.charAt(this.pos++)}eat(t){let e,n=this.string.charAt(this.pos);if(e="string"==typeof t?n==t:n&&(t instanceof RegExp?t.test(n):t(n)),e)return++this.pos,n}eatWhile(t){let e=this.pos;for(;this.eat(t););return this.pos>e}eatSpace(){let t=this.pos;for(;/[\s\u00a0]/.test(this.string.charAt(this.pos));)++this.pos;return this.pos>t}skipToEnd(){this.pos=this.string.length}skipTo(t){let e=this.string.indexOf(t,this.pos);if(e>-1)return this.pos=e,!0}backUp(t){this.pos-=t}column(){return this.lastColumnPos<this.start&&(this.lastColumnValue=countCol(this.string,this.start,this.tabSize,this.lastColumnPos,this.lastColumnValue),this.lastColumnPos=this.start),this.lastColumnValue}indentation(){var t;return null!==(t=this.overrideIndent)&&void 0!==t?t:countCol(this.string,null,this.tabSize)}match(t,e,n){if("string"==typeof t){let r=t=>n?t.toLowerCase():t;return r(this.string.substr(this.pos,t.length))==r(t)?(!1!==e&&(this.pos+=t.length),!0):null}{let n=this.string.slice(this.pos).match(t);return n&&n.index>0?null:(n&&!1!==e&&(this.pos+=n[0].length),n)}}current(){return this.string.slice(this.start,this.pos)}}function fullParser(t){return{name:t.name||"",token:t.token,blankLine:t.blankLine||(()=>{}),startState:t.startState||(()=>!0),copyState:t.copyState||defaultCopyState,indent:t.indent||(()=>null),languageData:t.languageData||{},tokenTable:t.tokenTable||noTokens,mergeTokens:!1!==t.mergeTokens}}function defaultCopyState(t){if("object"!=typeof t)return t;let e={};for(let n in t){let r=t[n];e[n]=r instanceof Array?r.slice():r}return e}const IndentedFrom=new WeakMap;class StreamLanguage extends Language{constructor(t){let e,n=defineLanguageFacet(t.languageData),r=fullParser(t);super(n,new class extends common.Parser{createParse(t,n,r){return new Parse(e,t,n,r)}},[],t.name),this.topNode=docID(n,this),e=this,this.streamParser=r,this.stateAfter=new common.NodeProp({perNode:!0}),this.tokenTable=t.tokenTable?new TokenTable(r.tokenTable):defaultTokenTable}static define(t){return new StreamLanguage(t)}getIndent(t){let e,{overrideIndentation:n}=t.options;n&&(e=IndentedFrom.get(t.state),null!=e&&e<t.pos-1e4&&(e=void 0));let r,o,i=findState(this,t.node.tree,t.node.from,t.node.from,null!==e&&void 0!==e?e:t.pos);if(i?(o=i.state,r=i.pos+1):(o=this.streamParser.startState(t.unit),r=t.node.from),t.pos-r>1e4)return null;for(;r<t.pos;){let e=t.state.doc.lineAt(r),i=Math.min(t.pos,e.to);if(e.length){let r=n?n(e.from):-1,s=new StringStream(e.text,t.state.tabSize,t.unit,r<0?void 0:r);for(;s.pos<i-e.from;)readToken(this.streamParser.token,s,o)}else this.streamParser.blankLine(o,t.unit);if(i==t.pos)break;r=e.to+1}let s=t.lineAt(t.pos);return n&&null==e&&IndentedFrom.set(t.state,s.from),this.streamParser.indent(o,/^\s*(.*)/.exec(s.text)[1],t)}get allowsNesting(){return!1}}function findState(t,e,n,r,o){let i=n>=r&&n+e.length<=o&&e.prop(t.stateAfter);if(i)return{state:t.streamParser.copyState(i),pos:n+e.length};for(let s=e.children.length-1;s>=0;s--){let i=e.children[s],a=n+e.positions[s],l=i instanceof common.Tree&&a<o&&findState(t,i,a,r,o);if(l)return l}return null}function cutTree(t,e,n,r,o){if(o&&n<=0&&r>=e.length)return e;o||0!=n||e.type!=t.topNode||(o=!0);for(let i=e.children.length-1;i>=0;i--){let s,a=e.positions[i],l=e.children[i];if(a<r&&l instanceof common.Tree){if(!(s=cutTree(t,l,n-a,r-a,o)))break;return o?new common.Tree(e.type,e.children.slice(0,i).concat(s),e.positions.slice(0,i+1),a+s.length):s}}return null}function findStartInFragments(t,e,n,r,o){for(let i of e){let e,o=i.from+(i.openStart?25:0),s=i.to-(i.openEnd?25:0),a=o<=n&&s>n&&findState(t,i.tree,0-i.offset,n,s);if(a&&a.pos<=r&&(e=cutTree(t,i.tree,n+i.offset,a.pos+i.offset,!1)))return{state:a.state,tree:e}}return{state:t.streamParser.startState(o?getIndentUnit(o):4),tree:common.Tree.empty}}class Parse{constructor(t,e,n,r){this.lang=t,this.input=e,this.fragments=n,this.ranges=r,this.stoppedAt=null,this.chunks=[],this.chunkPos=[],this.chunk=[],this.chunkReused=void 0,this.rangeIndex=0,this.to=r[r.length-1].to;let o=ParseContext.get(),i=r[0].from,{state:s,tree:a}=findStartInFragments(t,n,i,this.to,null===o||void 0===o?void 0:o.state);this.state=s,this.parsedPos=this.chunkStart=i+a.length;for(let l=0;l<a.children.length;l++)this.chunks.push(a.children[l]),this.chunkPos.push(a.positions[l]);o&&this.parsedPos<o.viewport.from-1e5&&r.some(t=>t.from<=o.viewport.from&&t.to>=o.viewport.from)&&(this.state=this.lang.streamParser.startState(getIndentUnit(o.state)),o.skipUntilInView(this.parsedPos,o.viewport.from),this.parsedPos=o.viewport.from),this.moveRangeIndex()}advance(){let t=ParseContext.get(),e=null==this.stoppedAt?this.to:Math.min(this.to,this.stoppedAt),n=Math.min(e,this.chunkStart+512);for(t&&(n=Math.min(n,t.viewport.to));this.parsedPos<n;)this.parseLine(t);return this.chunkStart<this.parsedPos&&this.finishChunk(),this.parsedPos>=e?this.finish():t&&this.parsedPos>=t.viewport.to?(t.skipUntilInView(this.parsedPos,e),this.finish()):null}stopAt(t){this.stoppedAt=t}lineAfter(t){let e=this.input.chunk(t);if(this.input.lineChunks)"\n"==e&&(e="");else{let t=e.indexOf("\n");t>-1&&(e=e.slice(0,t))}return t+e.length<=this.to?e:e.slice(0,this.to-t)}nextLine(){let t=this.parsedPos,e=this.lineAfter(t),n=t+e.length;for(let r=this.rangeIndex;;){let t=this.ranges[r].to;if(t>=n)break;if(e=e.slice(0,t-(n-e.length)),r++,r==this.ranges.length)break;let o=this.ranges[r].from,i=this.lineAfter(o);e+=i,n=o+i.length}return{line:e,end:n}}skipGapsTo(t,e,n){for(;;){let r=this.ranges[this.rangeIndex].to,o=t+e;if(n>0?r>o:r>=o)break;e+=this.ranges[++this.rangeIndex].from-r}return e}moveRangeIndex(){for(;this.ranges[this.rangeIndex].to<this.parsedPos;)this.rangeIndex++}emitToken(t,e,n,r){let o=4;if(this.ranges.length>1){e+=r=this.skipGapsTo(e,r,1);let t=this.chunk.length;n+=r=this.skipGapsTo(n,r,-1),o+=this.chunk.length-t}let i=this.chunk.length-4;return this.lang.streamParser.mergeTokens&&4==o&&i>=0&&this.chunk[i]==t&&this.chunk[i+2]==e?this.chunk[i+2]=n:this.chunk.push(t,e,n,o),r}parseLine(t){let{line:e,end:n}=this.nextLine(),r=0,{streamParser:o}=this.lang,i=new StringStream(e,t?t.state.tabSize:4,t?getIndentUnit(t.state):2);if(i.eol())o.blankLine(this.state,i.indentUnit);else for(;!i.eol();){let t=readToken(o.token,i,this.state);if(t&&(r=this.emitToken(this.lang.tokenTable.resolve(t),this.parsedPos+i.start,this.parsedPos+i.pos,r)),i.start>1e4)break}this.parsedPos=n,this.moveRangeIndex(),this.parsedPos<this.to&&this.parsedPos++}finishChunk(){let t=common.Tree.build({buffer:this.chunk,start:this.chunkStart,length:this.parsedPos-this.chunkStart,nodeSet:nodeSet,topID:0,maxBufferLength:512,reused:this.chunkReused});t=new common.Tree(t.type,t.children,t.positions,t.length,[[this.lang.stateAfter,this.lang.streamParser.copyState(this.state)]]),this.chunks.push(t),this.chunkPos.push(this.chunkStart-this.ranges[0].from),this.chunk=[],this.chunkReused=void 0,this.chunkStart=this.parsedPos}finish(){return new common.Tree(this.lang.topNode,this.chunks,this.chunkPos,this.parsedPos-this.ranges[0].from).balance()}}function readToken(t,e,n){e.start=e.pos;for(let r=0;r<10;r++){let r=t(e,n);if(e.pos>e.start)return r}throw new Error("Stream parser failed to advance stream.")}const noTokens=Object.create(null),typeArray=[common.NodeType.none],nodeSet=new common.NodeSet(typeArray),warned=[],byTag=Object.create(null),defaultTable=Object.create(null);for(let[t,e]of[["variable","variableName"],["variable-2","variableName.special"],["string-2","string.special"],["def","variableName.definition"],["tag","tagName"],["attribute","attributeName"],["type","typeName"],["builtin","variableName.standard"],["qualifier","modifier"],["error","invalid"],["header","heading"],["property","propertyName"]])defaultTable[t]=createTokenType(noTokens,e);class TokenTable{constructor(t){this.extra=t,this.table=Object.assign(Object.create(null),defaultTable)}resolve(t){return t?this.table[t]||(this.table[t]=createTokenType(this.extra,t)):0}}const defaultTokenTable=new TokenTable(noTokens);function warnForPart(t,e){warned.indexOf(t)>-1||(warned.push(t),console.warn(e))}function createTokenType(t,e){let n=[];for(let a of e.split(" ")){let e=[];for(let n of a.split(".")){let r=t[n]||highlight.tags[n];r?"function"==typeof r?e.length?e=e.map(r):warnForPart(n,`Modifier ${n} used at start of tag`):e.length?warnForPart(n,`Tag ${n} used as modifier`):e=Array.isArray(r)?r:[r]:warnForPart(n,`Unknown highlighting tag ${n}`)}for(let t of e)n.push(t)}if(!n.length)return 0;let r=e.replace(/ /g,"_"),o=r+" "+n.map(t=>t.id),i=byTag[o];if(i)return i.id;let s=byTag[o]=common.NodeType.define({id:typeArray.length,name:r,props:[highlight.styleTags({[r]:n})]});return typeArray.push(s),s.id}function docID(t,e){let n=common.NodeType.define({id:typeArray.length,name:"Document",props:[languageDataProp.add(()=>t),indentNodeProp.add(()=>t=>e.getIndent(t))],top:!0});return typeArray.push(n),n}function buildForLine(t){return t.length<=4096&&/[\u0590-\u05f4\u0600-\u06ff\u0700-\u08ac\ufb50-\ufdff]/.test(t)}function textHasRTL(t){for(let e=t.iter();!e.next().done;)if(buildForLine(e.value))return!0;return!1}function changeAddsRTL(t){let e=!1;return t.iterChanges((t,n,r,o,i)=>{!e&&textHasRTL(i)&&(e=!0)}),e}const alwaysIsolate=state.Facet.define({combine:t=>t.some(t=>t)});function bidiIsolates(t={}){let e=[isolateMarks];return t.alwaysIsolate&&e.push(alwaysIsolate.of(!0)),e}const isolateMarks=view.ViewPlugin.fromClass(class{constructor(t){this.always=t.state.facet(alwaysIsolate)||t.textDirection!=view.Direction.LTR||t.state.facet(view.EditorView.perLineTextDirection),this.hasRTL=!this.always&&textHasRTL(t.state.doc),this.tree=syntaxTree(t.state),this.decorations=this.always||this.hasRTL?buildDeco(t,this.tree,this.always):view.Decoration.none}update(t){let e=t.state.facet(alwaysIsolate)||t.view.textDirection!=view.Direction.LTR||t.state.facet(view.EditorView.perLineTextDirection);if(e||this.hasRTL||!changeAddsRTL(t.changes)||(this.hasRTL=!0),!e&&!this.hasRTL)return;let n=syntaxTree(t.state);(e!=this.always||n!=this.tree||t.docChanged||t.viewportChanged)&&(this.tree=n,this.always=e,this.decorations=buildDeco(t.view,n,e))}},{provide:t=>{function e(e){var n,r;return null!==(r=null===(n=e.plugin(t))||void 0===n?void 0:n.decorations)&&void 0!==r?r:view.Decoration.none}return[view.EditorView.outerDecorations.of(e),state.Prec.lowest(view.EditorView.bidiIsolatedRanges.of(e))]}});function buildDeco(t,e,n){let r=new state.RangeSetBuilder,o=t.visibleRanges;n||(o=clipRTLLines(o,t.state.doc));for(let{from:i,to:s}of o)e.iterate({enter:t=>{let e=t.type.prop(common.NodeProp.isolate);e&&r.add(t.from,t.to,marks[e])},from:i,to:s});return r.finish()}function clipRTLLines(t,e){let n=e.iter(),r=0,o=[],i=null;for(let{from:s,to:a}of t)if(!(i&&i.to>s&&(s=i.to,s>=a)))for(r+n.value.length<s&&(n.next(s-(r+n.value.length)),r=s);;){let t=r,e=r+n.value.length;if(!n.lineBreak&&buildForLine(n.value)&&(i&&i.to>t-10?i.to=Math.min(a,e):o.push(i={from:t,to:Math.min(a,e)})),e>=a)break;r=e,n.next()}return o}const marks={rtl:view.Decoration.mark({class:"cm-iso",inclusive:!0,attributes:{dir:"rtl"},bidiIsolate:view.Direction.RTL}),ltr:view.Decoration.mark({class:"cm-iso",inclusive:!0,attributes:{dir:"ltr"},bidiIsolate:view.Direction.LTR}),auto:view.Decoration.mark({class:"cm-iso",inclusive:!0,attributes:{dir:"auto"},bidiIsolate:null})};exports.DocInput=DocInput,exports.HighlightStyle=HighlightStyle,exports.IndentContext=IndentContext,exports.LRLanguage=LRLanguage,exports.Language=Language,exports.LanguageDescription=LanguageDescription,exports.LanguageSupport=LanguageSupport,exports.ParseContext=ParseContext,exports.StreamLanguage=StreamLanguage,exports.StringStream=StringStream,exports.TreeIndentContext=TreeIndentContext,exports.bidiIsolates=bidiIsolates,exports.bracketMatching=bracketMatching,exports.bracketMatchingHandle=bracketMatchingHandle,exports.codeFolding=codeFolding,exports.continuedIndent=continuedIndent,exports.defaultHighlightStyle=defaultHighlightStyle,exports.defineLanguageFacet=defineLanguageFacet,exports.delimitedIndent=delimitedIndent,exports.ensureSyntaxTree=ensureSyntaxTree,exports.flatIndent=flatIndent,exports.foldAll=foldAll,exports.foldCode=foldCode,exports.foldEffect=foldEffect,exports.foldGutter=foldGutter,exports.foldInside=foldInside,exports.foldKeymap=foldKeymap,exports.foldNodeProp=foldNodeProp,exports.foldService=foldService,exports.foldState=foldState,exports.foldable=foldable,exports.foldedRanges=foldedRanges,exports.forceParsing=forceParsing,exports.getIndentUnit=getIndentUnit,exports.getIndentation=getIndentation,exports.highlightingFor=highlightingFor,exports.indentNodeProp=indentNodeProp,exports.indentOnInput=indentOnInput,exports.indentRange=indentRange,exports.indentService=indentService,exports.indentString=indentString,exports.indentUnit=indentUnit,exports.language=language,exports.languageDataProp=languageDataProp,exports.matchBrackets=matchBrackets,exports.sublanguageProp=sublanguageProp,exports.syntaxHighlighting=syntaxHighlighting,exports.syntaxParserRunning=syntaxParserRunning,exports.syntaxTree=syntaxTree,exports.syntaxTreeAvailable=syntaxTreeAvailable,exports.toggleFold=toggleFold,exports.unfoldAll=unfoldAll,exports.unfoldCode=unfoldCode,exports.unfoldEffect=unfoldEffect;