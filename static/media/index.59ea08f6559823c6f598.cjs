"use strict";var view=require("@codemirror/view"),state=require("@codemirror/state"),styleMod=require("style-mod"),language=require("@codemirror/language"),highlight=require("@lezer/highlight");class Change{constructor(e,t,n,r){this.fromA=e,this.toA=t,this.fromB=n,this.toB=r}offset(e,t=e){return new Change(this.fromA+e,this.toA+e,this.fromB+t,this.toB+t)}}function findDiff(e,t,n,r,i,o){if(e==r)return[];let a=commonPrefix(e,t,n,r,i,o),s=commonSuffix(e,t+a,n,r,i+a,o),l=(n-=s)-(t+=a),d=(o-=s)-(i+=a);if(!l||!d)return[new Change(t,n,i,o)];if(l>d){let a=e.slice(t,n).indexOf(r.slice(i,o));if(a>-1)return[new Change(t,t+a,i,i),new Change(t+a+d,n,o,o)]}else if(d>l){let a=r.slice(i,o).indexOf(e.slice(t,n));if(a>-1)return[new Change(t,t,i,i+a),new Change(n,n,i+a+l,o)]}if(1==l||1==d)return[new Change(t,n,i,o)];let c=halfMatch(e,t,n,r,i,o);if(c){let[a,s,l]=c;return findDiff(e,t,a,r,i,s).concat(findDiff(e,a+l,n,r,s+l,o))}return findSnake(e,t,n,r,i,o)}let scanLimit=1e9,timeout=0,crude=!1;function findSnake(e,t,n,r,i,o){let a=n-t,s=o-i;if(scanLimit<1e9&&Math.min(a,s)>16*scanLimit||timeout>0&&Date.now()>timeout)return Math.min(a,s)>64*scanLimit?[new Change(t,n,i,o)]:crudeMatch(e,t,n,r,i,o);let l=Math.ceil((a+s)/2);frontier1.reset(l),frontier2.reset(l);let d=(n,o)=>e.charCodeAt(t+n)==r.charCodeAt(i+o),c=(t,i)=>e.charCodeAt(n-t-1)==r.charCodeAt(o-i-1),f=(a-s)%2!=0?frontier2:null,h=f?null:frontier1;for(let u=0;u<l;u++){if(u>scanLimit||timeout>0&&!(63&u)&&Date.now()>timeout)return crudeMatch(e,t,n,r,i,o);let g=frontier1.advance(u,a,s,l,f,!1,d)||frontier2.advance(u,a,s,l,h,!0,c);if(g)return bisect(e,t,n,t+g[0],r,i,o,i+g[1])}return[new Change(t,n,i,o)]}class Frontier{constructor(){this.vec=[]}reset(e){this.len=e<<1;for(let t=0;t<this.len;t++)this.vec[t]=-1;this.vec[e+1]=0,this.start=this.end=0}advance(e,t,n,r,i,o,a){for(let s=-e+this.start;s<=e-this.end;s+=2){let l=r+s,d=s==-e||s!=e&&this.vec[l-1]<this.vec[l+1]?this.vec[l+1]:this.vec[l-1]+1,c=d-s;for(;d<t&&c<n&&a(d,c);)d++,c++;if(this.vec[l]=d,d>t)this.end+=2;else if(c>n)this.start+=2;else if(i){let e=r+(t-n)-s;if(e>=0&&e<this.len&&-1!=i.vec[e])if(o){let n=i.vec[e];if(n>=t-d)return[n,r+n-e]}else{if(d>=t-i.vec[e])return[d,c]}}}return null}}const frontier1=new Frontier,frontier2=new Frontier;function bisect(e,t,n,r,i,o,a,s){let l=!1;return validIndex(e,r)||++r!=n||(l=!0),validIndex(i,s)||++s!=a||(l=!0),l?[new Change(t,n,o,a)]:findDiff(e,t,r,i,o,s).concat(findDiff(e,r,n,i,s,a))}function chunkSize(e,t){let n=1,r=Math.min(e,t);for(;n<r;)n<<=1;return n}function commonPrefix(e,t,n,r,i,o){if(t==n||t==o||e.charCodeAt(t)!=r.charCodeAt(i))return 0;let a=chunkSize(n-t,o-i);for(let s=t,l=i;;){let i=s+a,d=l+a;if(i>n||d>o||e.slice(s,i)!=r.slice(l,d)){if(1==a)return s-t-(validIndex(e,s)?0:1);a>>=1}else{if(i==n||d==o)return i-t;s=i,l=d}}}function commonSuffix(e,t,n,r,i,o){if(t==n||i==o||e.charCodeAt(n-1)!=r.charCodeAt(o-1))return 0;let a=chunkSize(n-t,o-i);for(let s=n,l=o;;){let o=s-a,d=l-a;if(o<t||d<i||e.slice(o,s)!=r.slice(d,l)){if(1==a)return n-s-(validIndex(e,s)?0:1);a>>=1}else{if(o==t||d==i)return n-o;s=o,l=d}}}function findMatch(e,t,n,r,i,o,a,s){let l=r.slice(i,o),d=null;for(;;){if(d||a<s)return d;for(let s=t+a;;){validIndex(e,s)||s++;let c=s+a;if(validIndex(e,c)||(c+=c==s+1?1:-1),c>=n)break;let f=e.slice(s,c),h=-1;for(;-1!=(h=l.indexOf(f,h+1));){let a=commonPrefix(e,c,n,r,i+h+f.length,o),l=commonSuffix(e,t,s,r,i,i+h),u=f.length+a+l;(!d||d[2]<u)&&(d=[s-l,i+h-l,u])}s=c}if(s<0)return d;a>>=1}}function halfMatch(e,t,n,r,i,o){let a=n-t,s=o-i;if(a<s){let a=halfMatch(r,i,o,e,t,n);return a&&[a[1],a[0],a[2]]}return a<4||2*s<a?null:findMatch(e,t,n,r,i,o,Math.floor(a/4),-1)}function crudeMatch(e,t,n,r,i,o){crude=!0;let a,s=n-t,l=o-i;if(s<l){let l=findMatch(r,i,o,e,t,n,Math.floor(s/6),50);a=l&&[l[1],l[0],l[2]]}else a=findMatch(e,t,n,r,i,o,Math.floor(l/6),50);if(!a)return[new Change(t,n,i,o)];let[d,c,f]=a;return findDiff(e,t,d,r,i,c).concat(findDiff(e,d+f,n,r,c+f,o))}function mergeAdjacent(e,t){for(let n=1;n<e.length;n++){let r=e[n-1],i=e[n];r.toA>i.fromA-t&&r.toB>i.fromB-t&&(e[n-1]=new Change(r.fromA,i.toA,r.fromB,i.toB),e.splice(n--,1))}}function normalize(e,t,n){for(;;){mergeAdjacent(n,1);let r=!1;for(let i=0;i<n.length;i++){let o,a,s=n[i];(o=commonPrefix(e,s.fromA,s.toA,t,s.fromB,s.toB))&&(s=n[i]=new Change(s.fromA+o,s.toA,s.fromB+o,s.toB)),(a=commonSuffix(e,s.fromA,s.toA,t,s.fromB,s.toB))&&(s=n[i]=new Change(s.fromA,s.toA-a,s.fromB,s.toB-a));let l=s.toA-s.fromA,d=s.toB-s.fromB;if(l&&d)continue;let c=s.fromA-(i?n[i-1].toA:0),f=(i<n.length-1?n[i+1].fromA:e.length)-s.toA;if(!c||!f)continue;let h=l?e.slice(s.fromA,s.toA):t.slice(s.fromB,s.toB);c<=h.length&&e.slice(s.fromA-c,s.fromA)==h.slice(h.length-c)?(n[i]=new Change(s.fromA-c,s.toA-c,s.fromB-c,s.toB-c),r=!0):f<=h.length&&e.slice(s.toA,s.toA+f)==h.slice(0,f)&&(n[i]=new Change(s.fromA+f,s.toA+f,s.fromB+f,s.toB+f),r=!0)}if(!r)break}return n}function makePresentable(e,t,n){for(let r=0,i=0;i<e.length;i++){let o=e[i],a=o.toA-o.fromA,s=o.toB-o.fromB;if(a&&s||a>3||s>3){let l=i==e.length-1?t.length:e[i+1].fromA,d=o.fromA-r,c=l-o.toA,f=findWordBoundaryBefore(t,o.fromA,d),h=findWordBoundaryAfter(t,o.toA,c),u=o.fromA-f,g=h-o.toA;if((!a||!s)&&u&&g){let d=Math.max(a,s),[c,m,p]=a?[t,o.fromA,o.toA]:[n,o.fromB,o.toB];d>u&&t.slice(f,o.fromA)==c.slice(p-u,p)?(o=e[i]=new Change(f,f+a,o.fromB-u,o.toB-u),f=o.fromA,h=findWordBoundaryAfter(t,o.toA,l-o.toA)):d>g&&t.slice(o.toA,h)==c.slice(m,m+g)&&(o=e[i]=new Change(h-a,h,o.fromB+g,o.toB+g),h=o.toA,f=findWordBoundaryBefore(t,o.fromA,o.fromA-r)),u=o.fromA-f,g=h-o.toA}if(u||g)o=e[i]=new Change(o.fromA-u,o.toA+g,o.fromB-u,o.toB+g);else if(a){if(!s){let n,r=findLineBreakAfter(t,o.fromA,o.toA),a=r<0?-1:findLineBreakBefore(t,o.toA,o.fromA);r>-1&&(n=r-o.fromA)<=c&&t.slice(o.fromA,r)==t.slice(o.toA,o.toA+n)?o=e[i]=o.offset(n):a>-1&&(n=o.toA-a)<=d&&t.slice(o.fromA-n,o.fromA)==t.slice(a,o.toA)&&(o=e[i]=o.offset(-n))}}else{let t,r=findLineBreakAfter(n,o.fromB,o.toB),a=r<0?-1:findLineBreakBefore(n,o.toB,o.fromB);r>-1&&(t=r-o.fromB)<=c&&n.slice(o.fromB,r)==n.slice(o.toB,o.toB+t)?o=e[i]=o.offset(t):a>-1&&(t=o.toB-a)<=d&&n.slice(o.fromB-t,o.fromB)==n.slice(a,o.toB)&&(o=e[i]=o.offset(-t))}}r=o.toA}return mergeAdjacent(e,3),e}let wordChar;try{wordChar=new RegExp("[\\p{Alphabetic}\\p{Number}]","u")}catch(_){}function asciiWordChar(e){return e>48&&e<58||e>64&&e<91||e>96&&e<123}function wordCharAfter(e,t){if(t==e.length)return 0;let n=e.charCodeAt(t);return n<192?asciiWordChar(n)?1:0:wordChar?isSurrogate1(n)&&t!=e.length-1?wordChar.test(e.slice(t,t+2))?2:0:wordChar.test(String.fromCharCode(n))?1:0:0}function wordCharBefore(e,t){if(!t)return 0;let n=e.charCodeAt(t-1);return n<192?asciiWordChar(n)?1:0:wordChar?isSurrogate2(n)&&1!=t?wordChar.test(e.slice(t-2,t))?2:0:wordChar.test(String.fromCharCode(n))?1:0:0}const MAX_SCAN=8;function findWordBoundaryAfter(e,t,n){if(t==e.length||!wordCharBefore(e,t))return t;for(let r=t,i=t+n,o=0;o<MAX_SCAN;o++){let t=wordCharAfter(e,r);if(!t||r+t>i)return r;r+=t}return t}function findWordBoundaryBefore(e,t,n){if(!t||!wordCharAfter(e,t))return t;for(let r=t,i=t-n,o=0;o<MAX_SCAN;o++){let t=wordCharBefore(e,r);if(!t||r-t<i)return r;r-=t}return t}function findLineBreakBefore(e,t,n){for(;t!=n;t--)if(10==e.charCodeAt(t-1))return t;return-1}function findLineBreakAfter(e,t,n){for(;t!=n;t++)if(10==e.charCodeAt(t))return t;return-1}const isSurrogate1=e=>e>=55296&&e<=56319,isSurrogate2=e=>e>=56320&&e<=57343;function validIndex(e,t){return!t||t==e.length||!isSurrogate1(e.charCodeAt(t-1))||!isSurrogate2(e.charCodeAt(t))}function diff(e,t,n){var r;return scanLimit=(null!==(r=null===n||void 0===n?void 0:n.scanLimit)&&void 0!==r?r:1e9)>>1,timeout=(null===n||void 0===n?void 0:n.timeout)?Date.now()+n.timeout:0,crude=!1,normalize(e,t,findDiff(e,0,e.length,t,0,t.length))}function diffIsPrecise(){return!crude}function presentableDiff(e,t,n){return makePresentable(diff(e,t,n),e,t)}const mergeConfig=state.Facet.define({combine:e=>e[0]}),setChunks=state.StateEffect.define(),computeChunks=state.Facet.define(),ChunkField=state.StateField.define({create:e=>null,update(e,t){for(let n of t.effects)n.is(setChunks)&&(e=n.value);for(let n of t.state.facet(computeChunks))e=n(e,t);return e}});function getChunks(e){let t=e.field(ChunkField,!1);if(!t)return null;let n=e.facet(mergeConfig);return{chunks:t,side:n?n.side:null}}let moveByChunk=e=>({state:t,dispatch:n})=>{let r=t.field(ChunkField,!1),i=t.facet(mergeConfig);if(!r||!r.length||!i)return!1;let{head:o}=t.selection.main,a=0;for(let c=r.length-1;c>=0;c--){let t=r[c],[n,s]="b"==i.side?[t.fromB,t.toB]:[t.fromA,t.toA];if(s<o){a=c+1;break}if(n<=o){if(1==r.length)return!1;a=c+(e<0?0:1);break}}let s=r[(a+(e<0?r.length-1:0))%r.length],[l,d]="b"==i.side?[s.fromB,s.toB]:[s.fromA,s.toA];return n(t.update({selection:{anchor:l},userEvent:"select.byChunk",effects:view.EditorView.scrollIntoView(state.EditorSelection.range(d,l))})),!0};const goToNextChunk=moveByChunk(1),goToPreviousChunk=moveByChunk(-1);class Chunk{constructor(e,t,n,r,i,o=!0){this.changes=e,this.fromA=t,this.toA=n,this.fromB=r,this.toB=i,this.precise=o}offset(e,t){return e||t?new Chunk(this.changes,this.fromA+e,this.toA+e,this.fromB+t,this.toB+t,this.precise):this}get endA(){return Math.max(this.fromA,this.toA-1)}get endB(){return Math.max(this.fromB,this.toB-1)}static build(e,t,n){return toChunks(presentableDiff(e.toString(),t.toString(),n),e,t,0,0,diffIsPrecise())}static updateA(e,t,n,r,i){return updateChunks(findRangesForChange(e,r,!0,n.length),e,t,n,i)}static updateB(e,t,n,r,i){return updateChunks(findRangesForChange(e,r,!1,t.length),e,t,n,i)}}function fromLine(e,t,n,r){let i=n.lineAt(e),o=r.lineAt(t);return i.to==e&&o.to==t&&e<n.length&&t<r.length?[e+1,t+1]:[i.from,o.from]}function toLine(e,t,n,r){let i=n.lineAt(e),o=r.lineAt(t);return i.from==e&&o.from==t?[e,t]:[i.to+1,o.to+1]}function toChunks(e,t,n,r,i,o){let a=[];for(let s=0;s<e.length;s++){let l=e[s],[d,c]=fromLine(l.fromA+r,l.fromB+i,t,n),[f,h]=toLine(l.toA+r,l.toB+i,t,n),u=[l.offset(-d+r,-c+i)];for(;s<e.length-1;){let o=e[s+1],[a,l]=fromLine(o.fromA+r,o.fromB+i,t,n);if(a>f+1&&l>h+1)break;u.push(o.offset(-d+r,-c+i)),[f,h]=toLine(o.toA+r,o.toB+i,t,n),s++}a.push(new Chunk(u,d,Math.max(d,f),c,Math.max(c,h),o))}return a}const updateMargin=1e3;function findPos(e,t,n,r){let i=0,o=e.length;for(;;){if(i==o){let r=0,o=0;i&&({toA:r,toB:o}=e[i-1]);let a=t-(n?r:o);return[r+a,o+a]}let a=i+o>>1,s=e[a],[l,d]=n?[s.fromA,s.toA]:[s.fromB,s.toB];if(l>t)o=a;else{if(!(d<=t))return r?[s.fromA,s.fromB]:[s.toA,s.toB];i=a+1}}}function findRangesForChange(e,t,n,r){let i=[];return t.iterChangedRanges((o,a,s,l)=>{let d=0,c=n?t.length:r,f=0,h=n?r:t.length;o>updateMargin&&([d,f]=findPos(e,o-updateMargin,n,!0)),a<t.length-updateMargin&&([c,h]=findPos(e,a+updateMargin,n,!1));let u,g=l-s-(a-o),[m,p]=n?[g,0]:[0,g];i.length&&(u=i[i.length-1]).toA>=d?i[i.length-1]={fromA:u.fromA,fromB:u.fromB,toA:c,toB:h,diffA:u.diffA+m,diffB:u.diffB+p}:i.push({fromA:d,toA:c,fromB:f,toB:h,diffA:m,diffB:p})}),i}function updateChunks(e,t,n,r,i){if(!e.length)return t;let o=[];for(let a=0,s=0,l=0,d=0;;a++){let c=a==e.length?null:e[a],f=c?c.fromA+s:n.length,h=c?c.fromB+l:r.length;for(;d<t.length;){let e=t[d];if(e.toA+s>f||e.toB+l>h)break;o.push(e.offset(s,l)),d++}if(!c)break;let u=c.toA+s+c.diffA,g=c.toB+l+c.diffB,m=presentableDiff(n.sliceString(f,u),r.sliceString(h,g),i);for(let e of toChunks(m,n,r,f,h,diffIsPrecise()))o.push(e);for(s+=c.diffA,l+=c.diffB;d<t.length;){let e=t[d];if(e.fromA+s>u&&e.fromB+l>g)break;d++}}return o}const defaultDiffConfig={scanLimit:500},decorateChunks=view.ViewPlugin.fromClass(class{constructor(e){({deco:this.deco,gutter:this.gutter}=getChunkDeco(e))}update(e){(e.docChanged||e.viewportChanged||chunksChanged(e.startState,e.state)||configChanged(e.startState,e.state))&&({deco:this.deco,gutter:this.gutter}=getChunkDeco(e.view))}},{decorations:e=>e.deco}),changeGutter=state.Prec.low(view.gutter({class:"cm-changeGutter",markers:e=>{var t;return(null===(t=e.plugin(decorateChunks))||void 0===t?void 0:t.gutter)||state.RangeSet.empty}}));function chunksChanged(e,t){return e.field(ChunkField,!1)!=t.field(ChunkField,!1)}function configChanged(e,t){return e.facet(mergeConfig)!=t.facet(mergeConfig)}const changedLine=view.Decoration.line({class:"cm-changedLine"}),changedText=view.Decoration.mark({class:"cm-changedText"}),inserted=view.Decoration.mark({tagName:"ins",class:"cm-insertedLine"}),deleted=view.Decoration.mark({tagName:"del",class:"cm-deletedLine"}),changedLineGutterMarker=new class extends view.GutterMarker{constructor(){super(...arguments),this.elementClass="cm-changedLineGutter"}};function buildChunkDeco(e,t,n,r,i,o){let a=n?e.fromA:e.fromB,s=n?e.toA:e.toB,l=0;if(a!=s){i.add(a,a,changedLine),i.add(a,s,n?deleted:inserted),o&&o.add(a,a,changedLineGutterMarker);for(let d=t.iterRange(a,s-1),c=a;!d.next().done;){if(d.lineBreak){c++,i.add(c,c,changedLine),o&&o.add(c,c,changedLineGutterMarker);continue}let t=c+d.value.length;if(r)for(;l<e.changes.length;){let r=e.changes[l],o=a+(n?r.fromA:r.fromB),s=a+(n?r.toA:r.toB),d=Math.max(c,o),f=Math.min(t,s);if(d<f&&i.add(d,f,changedText),!(s<t))break;l++}c=t}}}function getChunkDeco(e){let t=e.state.field(ChunkField),{side:n,highlightChanges:r,markGutter:i,overrideChunk:o}=e.state.facet(mergeConfig),a="a"==n,s=new state.RangeSetBuilder,l=i?new state.RangeSetBuilder:null,{from:d,to:c}=e.viewport;for(let f of t){if((a?f.fromA:f.fromB)>=c)break;(a?f.toA:f.toB)>d&&(o&&o(e.state,f,s,l)||buildChunkDeco(f,e.state.doc,a,r,s,l))}return{deco:s.finish(),gutter:l&&l.finish()}}class Spacer extends view.WidgetType{constructor(e){super(),this.height=e}eq(e){return this.height==e.height}toDOM(){let e=document.createElement("div");return e.className="cm-mergeSpacer",e.style.height=this.height+"px",e}updateDOM(e){return e.style.height=this.height+"px",!0}get estimatedHeight(){return this.height}ignoreEvent(){return!1}}const adjustSpacers=state.StateEffect.define({map:(e,t)=>e.map(t)}),Spacers=state.StateField.define({create:()=>view.Decoration.none,update:(e,t)=>{for(let n of t.effects)if(n.is(adjustSpacers))return n.value;return e.map(t.changes)},provide:e=>view.EditorView.decorations.from(e)}),epsilon=.01;function compareSpacers(e,t){if(e.size!=t.size)return!1;let n=e.iter(),r=t.iter();for(;n.value;){if(n.from!=r.from||Math.abs(n.value.spec.widget.height-r.value.spec.widget.height)>1)return!1;n.next(),r.next()}return!0}function updateSpacers(e,t,n){let r=new state.RangeSetBuilder,i=new state.RangeSetBuilder,o=e.state.field(Spacers).iter(),a=t.state.field(Spacers).iter(),s=0,l=0,d=0,c=0,f=e.viewport,h=t.viewport;for(let p=0;;p++){let u=p<n.length?n[p]:null,g=u?u.fromA:e.state.doc.length,m=u?u.fromB:t.state.doc.length;if(s<g){let n=e.lineBlockAt(s).top+d-(t.lineBlockAt(l).top+c);n<-.01?(d-=n,r.add(s,s,view.Decoration.widget({widget:new Spacer(-n),block:!0,side:-1}))):n>.01&&(c+=n,i.add(l,l,view.Decoration.widget({widget:new Spacer(n),block:!0,side:-1})))}if(g>s+1e3&&s<f.from&&g>f.from&&l<h.from&&m>h.from){let e=Math.min(f.from-s,h.from-l);s+=e,l+=e,p--}else{if(!u)break;s=u.toA,l=u.toB}for(;o.value&&o.from<s;)d-=o.value.spec.widget.height,o.next();for(;a.value&&a.from<l;)c-=a.value.spec.widget.height,a.next()}for(;o.value;)d-=o.value.spec.widget.height,o.next();for(;a.value;)c-=a.value.spec.widget.height,a.next();let u=e.contentHeight+d-(t.contentHeight+c);u<.01?r.add(e.state.doc.length,e.state.doc.length,view.Decoration.widget({widget:new Spacer(-u),block:!0,side:1})):u>.01&&i.add(t.state.doc.length,t.state.doc.length,view.Decoration.widget({widget:new Spacer(u),block:!0,side:1}));let g=r.finish(),m=i.finish();compareSpacers(g,e.state.field(Spacers))||e.dispatch({effects:adjustSpacers.of(g)}),compareSpacers(m,t.state.field(Spacers))||t.dispatch({effects:adjustSpacers.of(m)})}const uncollapseUnchanged=state.StateEffect.define({map:(e,t)=>t.mapPos(e)});class CollapseWidget extends view.WidgetType{constructor(e){super(),this.lines=e}eq(e){return this.lines==e.lines}toDOM(e){let t=document.createElement("div");return t.className="cm-collapsedLines",t.textContent=e.state.phrase("$ unchanged lines",this.lines),t.addEventListener("click",t=>{let n=e.posAtDOM(t.target);e.dispatch({effects:uncollapseUnchanged.of(n)});let{side:r,sibling:i}=e.state.facet(mergeConfig);i&&i().dispatch({effects:uncollapseUnchanged.of(mapPos(n,e.state.field(ChunkField),"a"==r))})}),t}ignoreEvent(e){return e instanceof MouseEvent}get estimatedHeight(){return 27}get type(){return"collapsed-unchanged-code"}}function mapPos(e,t,n){let r=0,i=0;for(let o=0;;o++){let a=o<t.length?t[o]:null;if(!a||(n?a.fromA:a.fromB)>=e)return i+(e-r);[r,i]=n?[a.toA,a.toB]:[a.toB,a.toA]}}const CollapsedRanges=state.StateField.define({create:e=>view.Decoration.none,update(e,t){e=e.map(t.changes);for(let n of t.effects)n.is(uncollapseUnchanged)&&(e=e.update({filter:e=>e!=n.value}));return e},provide:e=>view.EditorView.decorations.from(e)});function collapseUnchanged({margin:e=3,minSize:t=4}){return CollapsedRanges.init(n=>buildCollapsedRanges(n,e,t))}function buildCollapsedRanges(e,t,n){let r=new state.RangeSetBuilder,i="a"==e.facet(mergeConfig).side,o=e.field(ChunkField),a=1;for(let s=0;;s++){let l=s<o.length?o[s]:null,d=s?a+t:1,c=l?e.doc.lineAt(i?l.fromA:l.fromB).number-1-t:e.doc.lines,f=c-d+1;if(f>=n&&r.add(e.doc.line(d).from,e.doc.line(c).to,view.Decoration.replace({widget:new CollapseWidget(f),block:!0})),!l)break;a=e.doc.lineAt(Math.min(e.doc.length,i?l.toA:l.toB)).number}return r.finish()}const externalTheme=view.EditorView.styleModule.of(new styleMod.StyleModule({".cm-mergeView":{overflowY:"auto"},".cm-mergeViewEditors":{display:"flex",alignItems:"stretch"},".cm-mergeViewEditor":{flexGrow:1,flexBasis:0,overflow:"hidden"},".cm-merge-revert":{width:"1.6em",flexGrow:0,flexShrink:0,position:"relative"},".cm-merge-revert button":{position:"absolute",display:"block",width:"100%",boxSizing:"border-box",textAlign:"center",background:"none",border:"none",font:"inherit",cursor:"pointer"}})),baseTheme=view.EditorView.baseTheme({".cm-mergeView & .cm-scroller, .cm-mergeView &":{height:"auto !important",overflowY:"visible !important"},"&.cm-merge-a .cm-changedLine, .cm-deletedChunk":{backgroundColor:"rgba(160, 128, 100, .08)"},"&.cm-merge-b .cm-changedLine, .cm-inlineChangedLine":{backgroundColor:"rgba(100, 160, 128, .08)"},"&light.cm-merge-a .cm-changedText, &light .cm-deletedChunk .cm-deletedText":{background:"linear-gradient(#ee443366, #ee443366) bottom/100% 2px no-repeat"},"&dark.cm-merge-a .cm-changedText, &dark .cm-deletedChunk .cm-deletedText":{background:"linear-gradient(#ffaa9966, #ffaa9966) bottom/100% 2px no-repeat"},"&light.cm-merge-b .cm-changedText":{background:"linear-gradient(#22bb22aa, #22bb22aa) bottom/100% 2px no-repeat"},"&dark.cm-merge-b .cm-changedText":{background:"linear-gradient(#88ff88aa, #88ff88aa) bottom/100% 2px no-repeat"},"&.cm-merge-b .cm-deletedText":{background:"#ff000033"},".cm-insertedLine, .cm-deletedLine, .cm-deletedLine del":{textDecoration:"none"},".cm-deletedChunk":{paddingLeft:"6px","& .cm-chunkButtons":{position:"absolute",insetInlineEnd:"5px"},"& button":{border:"none",cursor:"pointer",color:"white",margin:"0 2px",borderRadius:"3px","&[name=accept]":{background:"#2a2"},"&[name=reject]":{background:"#d43"}}},".cm-collapsedLines":{padding:"5px 5px 5px 10px",cursor:"pointer","&:before":{content:'"\u299a"',marginInlineEnd:"7px"},"&:after":{content:'"\u299a"',marginInlineStart:"7px"}},"&light .cm-collapsedLines":{color:"#444",background:"linear-gradient(to bottom, transparent 0, #f3f3f3 30%, #f3f3f3 70%, transparent 100%)"},"&dark .cm-collapsedLines":{color:"#ddd",background:"linear-gradient(to bottom, transparent 0, #222 30%, #222 70%, transparent 100%)"},".cm-changeGutter":{width:"3px",paddingLeft:"1px"},"&light.cm-merge-a .cm-changedLineGutter, &light .cm-deletedLineGutter":{background:"#e43"},"&dark.cm-merge-a .cm-changedLineGutter, &dark .cm-deletedLineGutter":{background:"#fa9"},"&light.cm-merge-b .cm-changedLineGutter":{background:"#2b2"},"&dark.cm-merge-b .cm-changedLineGutter":{background:"#8f8"},".cm-inlineChangedLineGutter":{background:"#75d"}}),collapseCompartment=new state.Compartment,configCompartment=new state.Compartment;class MergeView{constructor(e){this.revertDOM=null,this.revertToA=!1,this.revertToLeft=!1,this.measuring=-1,this.diffConf=e.diffConfig||defaultDiffConfig;let t=[state.Prec.low(decorateChunks),baseTheme,externalTheme,Spacers,view.EditorView.updateListener.of(e=>{this.measuring<0&&(e.heightChanged||e.viewportChanged)&&!e.transactions.some(e=>e.effects.some(e=>e.is(adjustSpacers)))&&this.measure()})],n=[mergeConfig.of({side:"a",sibling:()=>this.b,highlightChanges:!1!==e.highlightChanges,markGutter:!1!==e.gutter})];!1!==e.gutter&&n.push(changeGutter);let r=state.EditorState.create({doc:e.a.doc,selection:e.a.selection,extensions:[e.a.extensions||[],view.EditorView.editorAttributes.of({class:"cm-merge-a"}),configCompartment.of(n),t]}),i=[mergeConfig.of({side:"b",sibling:()=>this.a,highlightChanges:!1!==e.highlightChanges,markGutter:!1!==e.gutter})];!1!==e.gutter&&i.push(changeGutter);let o=state.EditorState.create({doc:e.b.doc,selection:e.b.selection,extensions:[e.b.extensions||[],view.EditorView.editorAttributes.of({class:"cm-merge-b"}),configCompartment.of(i),t]});this.chunks=Chunk.build(r.doc,o.doc,this.diffConf);let a=[ChunkField.init(()=>this.chunks),collapseCompartment.of(e.collapseUnchanged?collapseUnchanged(e.collapseUnchanged):[])];r=r.update({effects:state.StateEffect.appendConfig.of(a)}).state,o=o.update({effects:state.StateEffect.appendConfig.of(a)}).state,this.dom=document.createElement("div"),this.dom.className="cm-mergeView",this.editorDOM=this.dom.appendChild(document.createElement("div")),this.editorDOM.className="cm-mergeViewEditors";let s=e.orientation||"a-b",l=document.createElement("div");l.className="cm-mergeViewEditor";let d=document.createElement("div");d.className="cm-mergeViewEditor",this.editorDOM.appendChild("a-b"==s?l:d),this.editorDOM.appendChild("a-b"==s?d:l),this.a=new view.EditorView({state:r,parent:l,root:e.root,dispatchTransactions:e=>this.dispatch(e,this.a)}),this.b=new view.EditorView({state:o,parent:d,root:e.root,dispatchTransactions:e=>this.dispatch(e,this.b)}),this.setupRevertControls(!!e.revertControls,"b-to-a"==e.revertControls,e.renderRevertControl),e.parent&&e.parent.appendChild(this.dom),this.scheduleMeasure()}dispatch(e,t){if(e.some(e=>e.docChanged)){let n=e[e.length-1],r=e.reduce((e,t)=>e.compose(t.changes),state.ChangeSet.empty(e[0].startState.doc.length));this.chunks=t==this.a?Chunk.updateA(this.chunks,n.newDoc,this.b.state.doc,r,this.diffConf):Chunk.updateB(this.chunks,this.a.state.doc,n.newDoc,r,this.diffConf),t.update([...e,n.state.update({effects:setChunks.of(this.chunks)})]);let i=t==this.a?this.b:this.a;i.update([i.state.update({effects:setChunks.of(this.chunks)})]),this.scheduleMeasure()}else t.update(e)}reconfigure(e){if("diffConfig"in e&&(this.diffConf=e.diffConfig),"orientation"in e){let t="b-a"!=e.orientation;if(t!=(this.editorDOM.firstChild==this.a.dom.parentNode)){let e=this.a.dom.parentNode,n=this.b.dom.parentNode;e.remove(),n.remove(),this.editorDOM.insertBefore(t?e:n,this.editorDOM.firstChild),this.editorDOM.appendChild(t?n:e),this.revertToLeft=!this.revertToLeft,this.revertDOM&&(this.revertDOM.textContent="")}}if("revertControls"in e||"renderRevertControl"in e){let t=!!this.revertDOM,n=this.revertToA,r=this.renderRevert;"revertControls"in e&&(t=!!e.revertControls,n="b-to-a"==e.revertControls),"renderRevertControl"in e&&(r=e.renderRevertControl),this.setupRevertControls(t,n,r)}let t="highlightChanges"in e,n="gutter"in e,r="collapseUnchanged"in e;if(t||n||r){let i=[],o=[];if(t||n){let r=this.a.state.facet(mergeConfig),a=n?!1!==e.gutter:r.markGutter,s=t?!1!==e.highlightChanges:r.highlightChanges;i.push(configCompartment.reconfigure([mergeConfig.of({side:"a",sibling:()=>this.b,highlightChanges:s,markGutter:a}),a?changeGutter:[]])),o.push(configCompartment.reconfigure([mergeConfig.of({side:"b",sibling:()=>this.a,highlightChanges:s,markGutter:a}),a?changeGutter:[]]))}if(r){let t=collapseCompartment.reconfigure(e.collapseUnchanged?collapseUnchanged(e.collapseUnchanged):[]);i.push(t),o.push(t)}this.a.dispatch({effects:i}),this.b.dispatch({effects:o})}this.scheduleMeasure()}setupRevertControls(e,t,n){this.revertToA=t,this.revertToLeft=this.revertToA==(this.editorDOM.firstChild==this.a.dom.parentNode),this.renderRevert=n,!e&&this.revertDOM?(this.revertDOM.remove(),this.revertDOM=null):e&&!this.revertDOM?(this.revertDOM=this.editorDOM.insertBefore(document.createElement("div"),this.editorDOM.firstChild.nextSibling),this.revertDOM.addEventListener("mousedown",e=>this.revertClicked(e)),this.revertDOM.className="cm-merge-revert"):this.revertDOM&&(this.revertDOM.textContent="")}scheduleMeasure(){if(this.measuring<0){let e=this.dom.ownerDocument.defaultView||window;this.measuring=e.requestAnimationFrame(()=>{this.measuring=-1,this.measure()})}}measure(){updateSpacers(this.a,this.b,this.chunks),this.revertDOM&&this.updateRevertButtons()}updateRevertButtons(){let e=this.revertDOM,t=e.firstChild,n=this.a.viewport,r=this.b.viewport;for(let i=0;i<this.chunks.length;i++){let o=this.chunks[i];if(o.fromA>n.to||o.fromB>r.to)break;if(o.fromA<n.from||o.fromB<r.from)continue;let a=this.a.lineBlockAt(o.fromA).top+"px";for(;t&&+t.dataset.chunk<i;)t=rm(t);t&&t.dataset.chunk==String(i)?(t.style.top!=a&&(t.style.top=a),t=t.nextSibling):e.insertBefore(this.renderRevertButton(a,i),t)}for(;t;)t=rm(t)}renderRevertButton(e,t){let n;if(this.renderRevert)n=this.renderRevert();else{n=document.createElement("button");let e=this.a.state.phrase("Revert this chunk");n.setAttribute("aria-label",e),n.setAttribute("title",e),n.textContent=this.revertToLeft?"\u21dc":"\u21dd"}return n.style.top=e,n.setAttribute("data-chunk",String(t)),n}revertClicked(e){let t,n=e.target;for(;n&&n.parentNode!=this.revertDOM;)n=n.parentNode;if(n&&(t=this.chunks[n.dataset.chunk])){let[n,r,i,o,a,s]=this.revertToA?[this.b,this.a,t.fromB,t.toB,t.fromA,t.toA]:[this.a,this.b,t.fromA,t.toA,t.fromB,t.toB],l=n.state.sliceDoc(i,Math.max(i,o-1));i!=o&&s<=r.state.doc.length&&(l+=n.state.lineBreak),r.dispatch({changes:{from:a,to:Math.min(r.state.doc.length,s),insert:l},userEvent:"revert"}),e.preventDefault()}}destroy(){this.a.destroy(),this.b.destroy(),this.measuring>-1&&(this.dom.ownerDocument.defaultView||window).cancelAnimationFrame(this.measuring),this.dom.remove()}}function rm(e){let t=e.nextSibling;return e.remove(),t}const deletedChunkGutterMarker=new class extends view.GutterMarker{constructor(){super(...arguments),this.elementClass="cm-deletedLineGutter"}},unifiedChangeGutter=state.Prec.low(view.gutter({class:"cm-changeGutter",markers:e=>{var t;return(null===(t=e.plugin(decorateChunks))||void 0===t?void 0:t.gutter)||state.RangeSet.empty},widgetMarker:(e,t)=>t instanceof DeletionWidget?deletedChunkGutterMarker:null}));function unifiedMergeView(e){let t="string"==typeof e.original?state.Text.of(e.original.split(/\r?\n/)):e.original,n=e.diffConfig||defaultDiffConfig;return[state.Prec.low(decorateChunks),deletedChunks,baseTheme,view.EditorView.editorAttributes.of({class:"cm-merge-b"}),computeChunks.of((e,t)=>{let r=t.effects.find(e=>e.is(updateOriginalDoc));return r&&(e=Chunk.updateA(e,r.value.doc,t.startState.doc,r.value.changes,n)),t.docChanged&&(e=Chunk.updateB(e,t.state.field(originalDoc),t.newDoc,t.changes,n)),e}),mergeConfig.of({highlightChanges:!1!==e.highlightChanges,markGutter:!1!==e.gutter,syntaxHighlightDeletions:!1!==e.syntaxHighlightDeletions,syntaxHighlightDeletionsMaxLength:3e3,mergeControls:!1!==e.mergeControls,overrideChunk:e.allowInlineDiffs?overrideChunkInline:void 0,side:"b"}),originalDoc.init(()=>t),!1!==e.gutter?unifiedChangeGutter:[],e.collapseUnchanged?collapseUnchanged(e.collapseUnchanged):[],ChunkField.init(e=>Chunk.build(t,e.doc,n))]}const updateOriginalDoc=state.StateEffect.define();function originalDocChangeEffect(e,t){return updateOriginalDoc.of({doc:t.apply(getOriginalDoc(e)),changes:t})}const originalDoc=state.StateField.define({create:()=>state.Text.empty,update(e,t){for(let n of t.effects)n.is(updateOriginalDoc)&&(e=n.value.doc);return e}});function getOriginalDoc(e){return e.field(originalDoc)}const DeletionWidgets=new WeakMap;class DeletionWidget extends view.WidgetType{constructor(e){super(),this.buildDOM=e,this.dom=null}eq(e){return this.dom==e.dom}toDOM(e){return this.dom||(this.dom=this.buildDOM(e))}}function deletionWidget(e,t,n){let r=DeletionWidgets.get(t.changes);if(r)return r;let i=view.Decoration.widget({block:!0,side:-1,widget:new DeletionWidget(r=>{let{highlightChanges:i,syntaxHighlightDeletions:o,syntaxHighlightDeletionsMaxLength:a,mergeControls:s}=e.facet(mergeConfig),l=document.createElement("div");if(l.className="cm-deletedChunk",s){let t=l.appendChild(document.createElement("div"));t.className="cm-chunkButtons";let n=t.appendChild(document.createElement("button"));n.name="accept",n.textContent=e.phrase("Accept"),n.onmousedown=e=>{e.preventDefault(),acceptChunk(r,r.posAtDOM(l))};let i=t.appendChild(document.createElement("button"));i.name="reject",i.textContent=e.phrase("Reject"),i.onmousedown=e=>{e.preventDefault(),rejectChunk(r,r.posAtDOM(l))}}if(n||t.fromA>=t.toA)return l;let d=r.state.field(originalDoc).sliceString(t.fromA,t.endA),c=o&&e.facet(language.language),f=m(),h=t.changes,u=0,g=!1;function m(){let e=l.appendChild(document.createElement("div"));return e.className="cm-deletedLine",e.appendChild(document.createElement("del"))}function p(e,t,n){for(let r=e;r<t;){if("\n"==d.charAt(r)){f.firstChild||f.appendChild(document.createElement("br")),f=m(),r++;continue}let e=t,o=n+(g?" cm-deletedText":""),a=!1,s=d.indexOf("\n",r);if(s>-1&&s<t&&(e=s),i&&u<h.length){let t=Math.max(0,g?h[u].toA:h[u].fromA);t<=e&&(e=t,g&&u++,a=!0)}if(e>r){let t=document.createTextNode(d.slice(r,e));if(o){let e=f.appendChild(document.createElement("span"));e.className=o,e.appendChild(t)}else f.appendChild(t);r=e}a&&(g=!g)}}if(c&&t.toA-t.fromA<=a){let t=c.parser.parse(d),n=0;highlight.highlightTree(t,{style:t=>language.highlightingFor(e,t)},(e,t,r)=>{e>n&&p(n,e,""),p(e,t,r),n=t}),p(n,d.length,"")}else p(0,d.length,"");return f.firstChild||f.appendChild(document.createElement("br")),l})});return DeletionWidgets.set(t.changes,i),i}function acceptChunk(e,t){let{state:n}=e,r=null!==t&&void 0!==t?t:n.selection.main.head,i=e.state.field(ChunkField).find(e=>e.fromB<=r&&e.endB>=r);if(!i)return!1;let o=e.state.sliceDoc(i.fromB,Math.max(i.fromB,i.toB-1)),a=e.state.field(originalDoc);i.fromB!=i.toB&&i.toA<=a.length&&(o+=e.state.lineBreak);let s=state.ChangeSet.of({from:i.fromA,to:Math.min(a.length,i.toA),insert:o},a.length);return e.dispatch({effects:updateOriginalDoc.of({doc:s.apply(a),changes:s}),userEvent:"accept"}),!0}function rejectChunk(e,t){let{state:n}=e,r=null!==t&&void 0!==t?t:n.selection.main.head,i=n.field(ChunkField).find(e=>e.fromB<=r&&e.endB>=r);if(!i)return!1;let o=n.field(originalDoc).sliceString(i.fromA,Math.max(i.fromA,i.toA-1));return i.fromA!=i.toA&&i.toB<=n.doc.length&&(o+=n.lineBreak),e.dispatch({changes:{from:i.fromB,to:Math.min(n.doc.length,i.toB),insert:o},userEvent:"revert"}),!0}function buildDeletedChunks(e){let t=new state.RangeSetBuilder;for(let n of e.field(ChunkField)){let r=e.facet(mergeConfig).overrideChunk&&chunkCanDisplayInline(e,n);t.add(n.fromB,n.fromB,deletionWidget(e,n,!!r))}return t.finish()}const deletedChunks=state.StateField.define({create:e=>buildDeletedChunks(e),update:(e,t)=>t.state.field(ChunkField,!1)!=t.startState.field(ChunkField,!1)?buildDeletedChunks(t.state):e,provide:e=>view.EditorView.decorations.from(e)}),InlineChunkCache=new WeakMap;function chunkCanDisplayInline(e,t){let n=InlineChunkCache.get(t);if(void 0!==n)return n;n=null;let r=e.field(originalDoc),i=e.doc,o=r.lineAt(t.endA).number-r.lineAt(t.fromA).number+1;e:if(o==i.lineAt(t.endB).number-i.lineAt(t.fromB).number+1&&o<10){let e=[],i=0,a=t.fromA,s=t.fromB;for(let n of t.changes){if(n.fromA<n.toA){i+=n.toA-n.fromA;let t=r.sliceString(a+n.fromA,a+n.toA);if(/\n/.test(t))break e;e.push(view.Decoration.widget({widget:new InlineDeletion(t),side:-1}).range(s+n.fromB))}n.fromB<n.toB&&e.push(changedText.range(s+n.fromB,s+n.toB))}i<t.endA-t.fromA-2*o&&(n=e)}return InlineChunkCache.set(t,n),n}class InlineDeletion extends view.WidgetType{constructor(e){super(),this.text=e}eq(e){return this.text==e.text}toDOM(e){let t=document.createElement("del");return t.className="cm-deletedText",t.textContent=this.text,t}}const inlineChangedLineGutterMarker=new class extends view.GutterMarker{constructor(){super(...arguments),this.elementClass="cm-inlineChangedLineGutter"}},inlineChangedLine=view.Decoration.line({class:"cm-inlineChangedLine"});function overrideChunkInline(e,t,n,r){let i=chunkCanDisplayInline(e,t),o=0;if(!i)return!1;for(let a=e.doc.lineAt(t.fromB);;){for(r&&r.add(a.from,a.from,inlineChangedLineGutterMarker),n.add(a.from,a.from,inlineChangedLine);o<i.length&&i[o].to<=a.to;){let e=i[o++];n.add(e.from,e.to,e.value)}if(a.to>=t.endB)break;a=e.doc.lineAt(a.to+1)}return!0}exports.Change=Change,exports.Chunk=Chunk,exports.MergeView=MergeView,exports.acceptChunk=acceptChunk,exports.diff=diff,exports.getChunks=getChunks,exports.getOriginalDoc=getOriginalDoc,exports.goToNextChunk=goToNextChunk,exports.goToPreviousChunk=goToPreviousChunk,exports.originalDocChangeEffect=originalDocChangeEffect,exports.presentableDiff=presentableDiff,exports.rejectChunk=rejectChunk,exports.uncollapseUnchanged=uncollapseUnchanged,exports.unifiedMergeView=unifiedMergeView,exports.updateOriginalDoc=updateOriginalDoc;